=== <module> ===
RESUME
LOAD_CONST FLOAT
STORE_NAME x
LOAD_NAME x
LOAD_CONST FLOAT
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_CONST greater
STORE_NAME result
JUMP_FORWARD
LOAD_NAME x
LOAD_CONST FLOAT
COMPARE_OP
LOAD_CONST equal
STORE_NAME result
LOAD_CONST FLOAT
LOAD_CONST FLOAT
UNPACK_SEQUENCE STRING_VERSION
STORE_NAME x
STORE_NAME y
STORE_NAME x, y
LOAD_NAME x
LOAD_CONST
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_NAME y
LOAD_CONST
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_CONST both positive
STORE_NAME result
JUMP_FORWARD
LOAD_CONST STRING_LEN_S_ENT_HIGH
STORE_NAME result
JUMP_FORWARD
LOAD_CONST x not positive
STORE_NAME result
LOAD_CONST
STORE_NAME total
PUSH_NULL
LOAD_NAME range
LOAD_CONST FLOAT
CALL STRING_VERSION
GET_ITER
FOR_ITER STRING_VERSION
STORE_NAME i
LOAD_NAME total
LOAD_NAME i
BINARY_OP
STORE_NAME total
JUMP_BACKWARD STRING_VERSION
END_FOR
LOAD_CONST FLOAT
LOAD_CONST FLOAT
LOAD_CONST FLOAT
BUILD_LIST STRING_VERSION
GET_ITER
FOR_ITER STRING_VERSION
STORE_NAME i
LOAD_NAME i
LOAD_CONST FLOAT
COMPARE_OP
POP_JUMP_IF_FALSE
BINARY_OPERATION
JUMP_BACKWARD STRING_VERSION
END_FOR
PUSH_NULL
LOAD_NAME range
LOAD_CONST FLOAT
CALL STRING_VERSION
GET_ITER
FOR_ITER STRING_VERSION
STORE_NAME i
PUSH_NULL
LOAD_NAME range
LOAD_CONST FLOAT
CALL STRING_VERSION
GET_ITER
FOR_ITER STRING_VERSION
STORE_NAME j
JUMP_BACKWARD STRING_VERSION
END_FOR
JUMP_BACKWARD STRING_VERSION
END_FOR
LOAD_CONST FLOAT
STORE_NAME count
LOAD_NAME count
LOAD_CONST
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_NAME count
LOAD_CONST FLOAT
BINARY_OP
STORE_NAME count
JUMP_BACKWARD STRING_VERSION
LOAD_CONST FLOAT
STORE_NAME count
LOAD_NAME count
LOAD_CONST
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_NAME count
LOAD_CONST FLOAT
BINARY_OP
STORE_NAME count
LOAD_NAME count
LOAD_CONST FLOAT
UNARY_NEGATIVE
COMPARE_OP
POP_JUMP_IF_FALSE
BINARY_OPERATION
JUMP_BACKWARD STRING_VERSION
LOAD_CONST
STORE_NAME found_even
PUSH_NULL
LOAD_NAME range
LOAD_CONST FLOAT
CALL STRING_VERSION
GET_ITER
FOR_ITER STRING_VERSION
STORE_NAME i
LOAD_NAME i
LOAD_CONST FLOAT
BINARY_OP STRING_VERSION
LOAD_CONST
COMPARE_OP
POP_JUMP_IF_FALSE
BINARY_OPERATION
LOAD_NAME i
LOAD_CONST FLOAT
COMPARE_OP
POP_JUMP_IF_FALSE
BINARY_OPERATION
LOAD_NAME i
LOAD_CONST FLOAT
COMPARE_OP
POP_JUMP_IF_FALSE
LOAD_CONST BOOLEAN
STORE_NAME found_even
JUMP_BACKWARD STRING_VERSION
END_FOR
NOP
LOAD_CONST FLOAT
LOAD_CONST
BINARY_OP STRING_VERSION
POP_TOP
RETURN_CONST
PUSH_EXC_INFO
LOAD_NAME STRING_LEN_S_ENT_HIGH
CHECK_EXC_MATCH
POP_JUMP_IF_FALSE
POP_TOP
POP_EXCEPT
RETURN_CONST
RERAISE
COPY 3
POP_EXCEPT
RERAISE STRING_VERSION
NOP
LOAD_CONST FLOAT
LOAD_CONST
BINARY_OP STRING_VERSION
STORE_NAME risky_operation
RETURN_CONST
PUSH_EXC_INFO
LOAD_NAME STRING_LEN_S_ENT_HIGH
CHECK_EXC_MATCH
POP_JUMP_IF_FALSE
POP_TOP
LOAD_CONST BOOLEAN
STORE_NAME error_handled
POP_EXCEPT
RETURN_CONST
LOAD_NAME Exception as e
CHECK_EXC_MATCH
POP_JUMP_IF_FALSE
POP_TOP
PUSH_NULL
LOAD_NAME str
LOAD_NAME e
CALL STRING_VERSION
STORE_NAME other_error
POP_EXCEPT
RETURN_CONST
RERAISE
COPY 3
POP_EXCEPT
RERAISE STRING_VERSION
PUSH_NULL
LOAD_BUILD_CLASS
LOAD_CONST STRING_FILE_PATH
MAKE_FUNCTION
LOAD_CONST MyContext
CALL STRING_VERSION
STORE_NAME MyContext
PUSH_NULL
LOAD_NAME MyContext
CALL
BEFORE_WITH
STORE_NAME cm
LOAD_CONST
LOAD_CONST
LOAD_CONST
CALL STRING_VERSION
POP_TOP
PUSH_EXC_INFO
WITH_EXCEPT_START
POP_JUMP_IF_TRUE
RERAISE STRING_VERSION
POP_TOP
POP_EXCEPT
POP_TOP
POP_TOP
JUMP_BACKWARD STRING_VERSION
COPY 3
POP_EXCEPT
RERAISE STRING_VERSION
PUSH_NULL
LOAD_NAME MyContext
CALL
BEFORE_WITH
STORE_NAME ctx1
PUSH_NULL
LOAD_NAME MyContext
CALL
BEFORE_WITH
STORE_NAME ctx2
LOAD_NAME ctx1
LOAD_NAME ctx2
BINARY_OP
STORE_NAME STRING_LEN_S_ENT_HIGH
LOAD_CONST
LOAD_CONST
LOAD_CONST
CALL STRING_VERSION
POP_TOP
PUSH_EXC_INFO
WITH_EXCEPT_START
POP_JUMP_IF_TRUE
RERAISE STRING_VERSION
POP_TOP
POP_EXCEPT
POP_TOP
POP_TOP
JUMP_BACKWARD STRING_VERSION
COPY 3
POP_EXCEPT
RERAISE STRING_VERSION
LOAD_CONST FLOAT
LOAD_CONST FLOAT
COMPARE_OP
BINARY_OPERATION
LOAD_CONST STRING_FILE_PATH
MAKE_FUNCTION
STORE_NAME empty_func
PUSH_NULL
LOAD_NAME USER_IO
LOAD_CONST STRING_LEN_S_ENT_HIGH
CALL STRING_VERSION
POP_TOP
RETURN_CONST

=== MyContext_ref_0 ===
MAKE_FUNCTION
LOAD_CONST Hello from with
RETURN_VALUE
STORE_NAME __enter__
MAKE_FUNCTION
LOAD_CONST
RETURN_VALUE
STORE_NAME __exit__

=== empty_func_ref_1 ===
RETURN_VALUE
