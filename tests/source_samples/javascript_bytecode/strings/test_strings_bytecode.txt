=== <module> ===
RESUME 0
LOAD_CONST 'Hello world'
STORE_NAME singleQuoted
LOAD_CONST "Hello world"
STORE_NAME doubleQuoted
BINARY_OPERATION None
STORE_NAME backtickString
LOAD_CONST "Alice"
STORE_NAME name
LOAD_CONST 30.0
STORE_NAME age
BINARY_OPERATION None
STORE_NAME templateBasic
BINARY_OPERATION None
STORE_NAME templateExpression
BINARY_OPERATION None
STORE_NAME templateComplex
BINARY_OPERATION None
STORE_NAME templateMultiline
LOAD_CONST "Hello"
LOAD_CONST " "
BINARY_OP 0
LOAD_CONST "world"
BINARY_OP 0
STORE_NAME concatPlus
BINARY_OPERATION None
STORE_NAME concatTemplate
PUSH_NULL None
LOAD_CONST "Hello"
LOAD_ATTR concat
LOAD_CONST " "
LOAD_CONST "world"
CALL 2
STORE_NAME concatMethod
LOAD_CONST "Hello, World!"
STORE_NAME text
LOAD_NAME text
LOAD_CONST 0.0
BINARY_SUBSCR None
STORE_NAME firstChar
LOAD_NAME text
LOAD_NAME text
LOAD_ATTR length
LOAD_CONST 1.0
BINARY_OP 2
BINARY_SUBSCR None
STORE_NAME lastChar
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR charAt
LOAD_CONST 0.0
CALL 1
STORE_NAME charAt
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR charCodeAt
LOAD_CONST 0.0
CALL 1
STORE_NAME charCodeAt
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR substring
LOAD_CONST 7.0
LOAD_CONST 12.0
CALL 2
STORE_NAME substring
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR substr
LOAD_CONST 7.0
LOAD_CONST 5.0
CALL 2
STORE_NAME substr
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR slice
LOAD_CONST 7.0
LOAD_CONST 12.0
CALL 2
STORE_NAME slice
PUSH_NULL None
LOAD_NAME text
LOAD_ATTR slice
LOAD_CONST 6.0
UNARY_NEGATIVE None
LOAD_CONST 1.0
UNARY_NEGATIVE None
CALL 2
STORE_NAME sliceNegative
PUSH_NULL None
LOAD_CONST "hello"
LOAD_ATTR toUpperCase
CALL 0
STORE_NAME upperCase
PUSH_NULL None
LOAD_CONST "HELLO"
LOAD_ATTR toLowerCase
CALL 0
STORE_NAME lowerCase
PUSH_NULL None
LOAD_CONST "hello"
LOAD_ATTR toLocaleUpperCase
CALL 0
STORE_NAME localeUpper
PUSH_NULL None
LOAD_CONST "HELLO"
LOAD_ATTR toLocaleLowerCase
CALL 0
STORE_NAME localeLower
PUSH_NULL None
LOAD_CONST "  hello  "
LOAD_ATTR trim
CALL 0
STORE_NAME stripped
PUSH_NULL None
LOAD_CONST "  hello  "
LOAD_ATTR trimStart
CALL 0
STORE_NAME leftStripped
PUSH_NULL None
LOAD_CONST "  hello  "
LOAD_ATTR trimEnd
CALL 0
STORE_NAME rightStripped
LOAD_CONST "The quick brown fox"
STORE_NAME textSearch
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR indexOf
LOAD_CONST "quick"
CALL 1
STORE_NAME indexOf
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR lastIndexOf
LOAD_CONST "o"
CALL 1
STORE_NAME lastIndexOf
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR includes
LOAD_CONST "brown"
CALL 1
STORE_NAME includes
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR startsWith
LOAD_CONST "The"
CALL 1
STORE_NAME startsWith
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR endsWith
LOAD_CONST "fox"
CALL 1
STORE_NAME endsWith
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR replace
LOAD_CONST "fox"
LOAD_CONST "dog"
CALL 2
STORE_NAME replaceResult
PUSH_NULL None
LOAD_CONST "hello hello hello"
LOAD_ATTR replaceAll
LOAD_CONST "hello"
LOAD_CONST "hi"
CALL 2
STORE_NAME replaceAll
PUSH_NULL None
LOAD_NAME textSearch
LOAD_ATTR replace
LOAD_CONST /o/g
LOAD_CONST "0"
CALL 2
STORE_NAME replaceRegex
LOAD_CONST "apple,banana,cherry"
STORE_NAME csvData
PUSH_NULL None
LOAD_NAME csvData
LOAD_ATTR split
LOAD_CONST ","
CALL 1
STORE_NAME splitResult
PUSH_NULL None
LOAD_CONST "a"
LOAD_CONST "b"
LOAD_CONST "c"
BUILD_LIST 3
LOAD_ATTR join
LOAD_CONST " | "
CALL 1
STORE_NAME joinResult
PUSH_NULL None
LOAD_CONST "a-b-c-d-e"
LOAD_ATTR split
LOAD_CONST "-"
LOAD_CONST 3.0
CALL 2
STORE_NAME splitLimit
LOAD_CONST /\d+/g
STORE_NAME pattern
LOAD_CONST "I have 10 apples and 5 oranges"
STORE_NAME textWithNumbers
PUSH_NULL None
LOAD_NAME textWithNumbers
LOAD_ATTR match
LOAD_NAME pattern
CALL 1
STORE_NAME matches
BUILD_LIST 1
STORE_NAME matchAll
PUSH_NULL None
LOAD_NAME textWithNumbers
LOAD_ATTR search
LOAD_CONST /\d+/
CALL 1
STORE_NAME search
PUSH_NULL None
LOAD_CONST /^\d+$/
LOAD_ATTR test
LOAD_CONST "123"
CALL 1
STORE_NAME isDigit
PUSH_NULL None
LOAD_CONST /^[a-zA-Z]+$/
LOAD_ATTR test
LOAD_CONST "abc"
CALL 1
STORE_NAME isAlpha
PUSH_NULL None
LOAD_CONST /^[a-zA-Z0-9]+$/
LOAD_ATTR test
LOAD_CONST "abc123"
CALL 1
STORE_NAME isAlphaNum
PUSH_NULL None
LOAD_CONST "5"
LOAD_ATTR padStart
LOAD_CONST 3.0
LOAD_CONST "0"
CALL 2
STORE_NAME padStart
PUSH_NULL None
LOAD_CONST "5"
LOAD_ATTR padEnd
LOAD_CONST 3.0
LOAD_CONST "0"
CALL 2
STORE_NAME padEnd
PUSH_NULL None
LOAD_CONST "hello"
LOAD_ATTR padStart
LOAD_CONST 10.0
CALL 1
STORE_NAME padStartSpace
PUSH_NULL None
LOAD_CONST "Ha"
LOAD_ATTR repeat
LOAD_CONST 5.0
CALL 1
STORE_NAME repeated
PUSH_NULL None
LOAD_CONST "-"
LOAD_ATTR repeat
LOAD_CONST 40.0
CALL 1
STORE_NAME dashes
LOAD_CONST "apple"
STORE_NAME str1
LOAD_CONST "banana"
STORE_NAME str2
LOAD_NAME str1
LOAD_NAME str2
COMPARE_LESS None
STORE_NAME comparison
LOAD_NAME str1
LOAD_CONST "apple"
COMPARE_EQUAL None
STORE_NAME equality
PUSH_NULL None
LOAD_NAME str1
LOAD_ATTR toLowerCase
CALL 0
PUSH_NULL None
LOAD_CONST "APPLE"
LOAD_ATTR toLowerCase
CALL 0
COMPARE_EQUAL None
STORE_NAME caseInsensitive
PUSH_NULL None
LOAD_NAME encodeURIComponent
LOAD_CONST "Hello World!"
CALL 1
STORE_NAME encoded
PUSH_NULL None
LOAD_NAME decodeURIComponent
LOAD_NAME encoded
CALL 1
STORE_NAME decoded
PUSH_NULL None
LOAD_NAME encodeURI
LOAD_CONST "https://example.com/path with spaces"
CALL 1
STORE_NAME encodedURI
PUSH_NULL None
LOAD_NAME decodeURI
LOAD_NAME encodedURI
CALL 1
STORE_NAME decodedURI
LOAD_CONST "She said \"Hello\" to me"
STORE_NAME escapedQuotes
LOAD_CONST "Line 1\nLine 2\nLine 3"
STORE_NAME escapedNewline
LOAD_CONST "Column1\tColumn2\tColumn3"
STORE_NAME escapedTab
LOAD_CONST "Path: C:\\folder\\file.txt"
STORE_NAME escapedBackslash
LOAD_CONST "Unicode: \u0041\u0042\u0043"
STORE_NAME escapedUnicode
PUSH_NULL None
LOAD_NAME String
LOAD_ATTR fromCharCode
LOAD_CONST 65.0
LOAD_CONST 66.0
LOAD_CONST 67.0
CALL 3
STORE_NAME fromCharCode
PUSH_NULL None
LOAD_NAME String
LOAD_ATTR fromCodePoint
LOAD_CONST 0x1F44D
CALL 1
STORE_NAME fromCodePoint
LOAD_CONST "café"
STORE_NAME accented
PUSH_NULL None
LOAD_NAME accented
LOAD_ATTR normalize
LOAD_CONST 'NFD'
CALL 1
STORE_NAME normalized
PUSH_NULL None
LOAD_NAME normalized
LOAD_ATTR normalize
LOAD_CONST 'NFC'
CALL 1
STORE_NAME composed
PUSH_NULL None
LOAD_CONST "a"
LOAD_ATTR localeCompare
LOAD_CONST "b"
CALL 1
STORE_NAME localeCompare
PUSH_NULL None
LOAD_CONST "Äpfel"
LOAD_ATTR localeCompare
LOAD_CONST "Zebra"
LOAD_CONST 'de'
LOAD_CONST True
BUILD_MAP 1
CALL 3
STORE_NAME localeCompareOptions
PUSH_NULL None
LOAD_NAME String
LOAD_ATTR raw
CALL 5
STORE_NAME rawString
PUSH_NULL None
LOAD_NAME String
LOAD_ATTR raw
CALL 9
STORE_NAME rawPath
LOAD_CONST "hello"
STORE_NAME iterableString
BUILD_LIST 1
STORE_NAME charArray
BUILD_LIST 0
STORE_NAME forOfChars
LOAD_NAME iterableString
GET_ITER None
FOR_ITER 8
STORE_NAME char
PUSH_NULL None
LOAD_NAME forOfChars
LOAD_ATTR push
LOAD_NAME char
CALL 1
POP_TOP None
JUMP_BACKWARD 9
END_FOR None
PUSH_NULL None
PUSH_NULL None
PUSH_NULL None
PUSH_NULL None
PUSH_NULL None
LOAD_CONST "  Hello World  "
LOAD_ATTR trim
CALL 0
LOAD_ATTR toLowerCase
CALL 0
LOAD_ATTR replace
LOAD_CONST "world"
LOAD_CONST "javascript"
CALL 2
LOAD_ATTR split
LOAD_CONST " "
CALL 1
LOAD_ATTR join
LOAD_CONST "-"
CALL 1
STORE_NAME chained
LOAD_CONST "Special: !@#$%^&*()_+-=[]{}|;':\",./<>?"
STORE_NAME specialChars
PUSH_NULL None
LOAD_CONST /[^a-zA-Z0-9]/
LOAD_ATTR test
LOAD_NAME specialChars
CALL 1
STORE_NAME hasSpecial
PUSH_NULL None
LOAD_NAME String
LOAD_CONST 123.0
CALL 1
STORE_NAME numberToString
PUSH_NULL None
LOAD_NAME String
LOAD_CONST True
CALL 1
STORE_NAME booleanToString
PUSH_NULL None
LOAD_NAME String
LOAD_CONST "test"
BUILD_MAP 1
CALL 1
STORE_NAME objectToString
PUSH_NULL None
LOAD_NAME String
LOAD_CONST 1.0
LOAD_CONST 2.0
LOAD_CONST 3.0
BUILD_LIST 3
CALL 1
STORE_NAME arrayToString
LOAD_CONST CodeObject(name=highlight_ref_1, path=/Users/mav/dev/malwi/tests/source_samples/javascript/strings/test_strings.js, location=(151, 155))
MAKE_FUNCTION 0
STORE_NAME highlight
PUSH_NULL None
LOAD_NAME highlight
LOAD_NAME name
LOAD_NAME age
CALL 7
STORE_NAME highlighted
LOAD_CONST "hello"
LOAD_CONST "world"
LOAD_CONST "javascript"
BUILD_LIST 3
STORE_NAME words
PUSH_NULL None
LOAD_NAME words
LOAD_ATTR map
MAKE_FUNCTION lambda_ref_2
CALL 1
STORE_NAME uppercaseWords
PUSH_NULL None
LOAD_NAME words
LOAD_ATTR filter
MAKE_FUNCTION lambda_ref_3
CALL 1
STORE_NAME longWords
PUSH_NULL None
LOAD_NAME words
LOAD_ATTR join
LOAD_CONST " "
CALL 1
STORE_NAME joinedWords
LOAD_CONST "Alice"
LOAD_CONST 30.0
BUILD_MAP 2
STORE_NAME obj
PUSH_NULL None
LOAD_NAME JSON
LOAD_ATTR stringify
LOAD_NAME obj
CALL 1
STORE_NAME jsonString
PUSH_NULL None
LOAD_NAME JSON
LOAD_ATTR parse
LOAD_NAME jsonString
CALL 1
STORE_NAME parsedObject
BUILD_LIST 0
STORE_NAME parts
PUSH_NULL None
LOAD_NAME parts
LOAD_ATTR push
LOAD_CONST "Hello"
CALL 1
POP_TOP None
PUSH_NULL None
LOAD_NAME parts
LOAD_ATTR push
LOAD_CONST " "
CALL 1
POP_TOP None
PUSH_NULL None
LOAD_NAME parts
LOAD_ATTR push
LOAD_CONST "World"
CALL 1
POP_TOP None
PUSH_NULL None
LOAD_NAME parts
LOAD_ATTR join
LOAD_CONST ""
CALL 1
STORE_NAME built
LOAD_CONST /^[^\s@]+@[^\s@]+\.[^\s@]+$/
STORE_NAME emailPattern
LOAD_CONST /^\(\d{3}\) \d{3}-\d{4}$/
STORE_NAME phonePattern
PUSH_NULL None
LOAD_NAME emailPattern
LOAD_ATTR test
LOAD_CONST "user@example.com"
CALL 1
STORE_NAME isValidEmail
PUSH_NULL None
LOAD_NAME phonePattern
LOAD_ATTR test
LOAD_CONST "(555) 123-4567"
CALL 1
STORE_NAME isValidPhone
PUSH_NULL None
LOAD_NAME console
LOAD_ATTR log
LOAD_CONST "String operations test completed"
CALL 1
POP_TOP None
RETURN_CONST None

=== lambda_ref_0 ===
LOAD_PARAM result
LOAD_PARAM string
BINARY_OP 0
LOAD_GLOBAL values
LOAD_PARAM i
BINARY_SUBSCR None
BINARY_OPERATION None
LOAD_CONST ''
BINARY_OP 0
RETURN_VALUE None

=== highlight_ref_1 ===
PUSH_NULL None
LOAD_PARAM strings
LOAD_ATTR reduce
MAKE_FUNCTION lambda_ref_0
LOAD_CONST ''
CALL 2
RETURN_VALUE None

=== lambda_ref_2 ===
PUSH_NULL None
LOAD_PARAM word
LOAD_ATTR toUpperCase
CALL 0
RETURN_VALUE None

=== lambda_ref_3 ===
LOAD_PARAM word
LOAD_ATTR length
LOAD_CONST 5.0
COMPARE_GREATER None
RETURN_VALUE None
