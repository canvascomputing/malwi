statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/botaa3/1.0.0/botaa3-1.0.0/boto3-1.20.7/boto3/docs/subresource.py
  contents:
  - name: document_sub_resource
    score: 0.0
    code: |-
      def document_sub_resource(section, resource_name, sub_resource_model,
                                service_model, include_signature=True):
          """Documents a resource action

          :param section: The section to write to

          :param resource_name: The name of the resource

          :param sub_resource_model: The model of the subresource

          :param service_model: The model of the service

          :param include_signature: Whether or not to include the signature.
              It is useful for generating docstrings.
          """
          identifiers_needed = []
          for identifier in sub_resource_model.resource.identifiers:
              if identifier.source == 'input':
                  identifiers_needed.append(xform_name(identifier.target))

          if include_signature:
              signature_args = get_identifier_args_for_signature(identifiers_needed)
              section.style.start_sphinx_py_method(
                  sub_resource_model.name, signature_args)

          method_intro_section = section.add_new_section(
              'method-intro')
          description = 'Creates a %s resource.' % sub_resource_model.resource.type
          method_intro_section.include_doc_string(description)
          example_section = section.add_new_section('example')
          example_values = get_identifier_values_for_example(identifiers_needed)
          example_resource_name = xform_name(resource_name)
          if service_model.service_name == resource_name:
              example_resource_name = resource_name
          example = '%s = %s.%s(%s)' % (
              xform_name(sub_resource_model.resource.type),
              example_resource_name,
              sub_resource_model.name, example_values
          )
          example_section.style.start_codeblock()
          example_section.write(example)
          example_section.style.end_codeblock()

          param_section = section.add_new_section('params')
          for identifier in identifiers_needed:
              description = get_identifier_description(
                  sub_resource_model.name, identifier)
              param_section.write(':type %s: string' % identifier)
              param_section.style.new_line()
              param_section.write(':param %s: %s' % (
                  identifier, description))
              param_section.style.new_line()

          return_section = section.add_new_section('return')
          return_section.style.new_line()
          return_section.write(
              ':rtype: :py:class:`%s.%s`' % (
                  get_service_module_name(service_model),
                  sub_resource_model.resource.type))
          return_section.style.new_line()
          return_section.write(
              ':returns: A %s resource' % sub_resource_model.resource.type)
          return_section.style.new_line()
    tokens: 'resume build_list store_fast STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_attr resource load_attr identifiers get_iter for_iter TO_NUMBER store_fast identifier load_fast identifier load_attr source load_const USER_IO compare_op == pop_jump_if_true TO_NUMBER jump_backward TO_NUMBER load_fast STRING_LEN_S_ENT_HIGH load_attr append load_global xform_name load_fast identifier load_attr target call call pop_top jump_backward TO_NUMBER end_for load_fast STRING_LEN_S_ENT_HIGH pop_jump_if_false TO_NUMBER load_global STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH call store_fast signature_args load_fast section load_attr style load_attr STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_attr name load_fast signature_args call pop_top load_fast section load_attr add_new_section load_const method-intro call store_fast STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_attr resource load_attr type binary_op % store_fast description load_fast STRING_LEN_S_ENT_HIGH load_attr STRING_LEN_S_ENT_HIGH load_fast description call pop_top load_fast section load_attr add_new_section load_const example call store_fast example_section load_global STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH call store_fast example_values load_global xform_name load_fast resource_name call store_fast STRING_LEN_S_ENT_HIGH load_fast service_model load_attr service_name load_fast resource_name compare_op == pop_jump_if_false TO_NUMBER load_fast resource_name store_fast STRING_LEN_S_ENT_HIGH load_global xform_name load_fast STRING_LEN_S_ENT_HIGH load_attr resource load_attr type call format_value INTEGER load_const = load_fast STRING_LEN_S_ENT_HIGH format_value INTEGER load_const . load_fast STRING_LEN_S_ENT_HIGH load_attr name format_value INTEGER load_const ( load_fast example_values format_value INTEGER load_const ) build_string store_fast example load_fast example_section load_attr style load_attr start_codeblock call pop_top load_fast example_section load_attr write load_fast example call pop_top load_fast example_section load_attr style load_attr end_codeblock call pop_top load_fast section load_attr add_new_section load_const params call store_fast param_section load_fast STRING_LEN_S_ENT_HIGH get_iter for_iter TO_NUMBER store_fast identifier load_global STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_attr name load_fast identifier call store_fast description load_fast param_section load_attr write load_const STRING_LEN_S_ENT_HIGH load_fast identifier binary_op % call pop_top load_fast param_section load_attr style load_attr new_line call pop_top load_fast param_section load_attr write load_const :param load_fast identifier format_value INTEGER load_const : load_fast description format_value INTEGER build_string call pop_top load_fast param_section load_attr style load_attr new_line call pop_top jump_backward TO_NUMBER end_for load_fast section load_attr add_new_section load_const return call store_fast return_section load_fast return_section load_attr style load_attr new_line call pop_top load_fast return_section load_attr write load_const STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_fast service_model call format_value INTEGER load_const . load_fast STRING_LEN_S_ENT_HIGH load_attr resource load_attr type format_value INTEGER load_const ` build_string call pop_top load_fast return_section load_attr style load_attr new_line call pop_top load_fast return_section load_attr write load_const STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_attr resource load_attr type binary_op % call pop_top load_fast return_section load_attr style load_attr new_line call pop_top return_const None'
    hash: 6b8a87e1f3a9ca5724dd55e222ed24f124d20109fb177565a535e943626e5d9f
sources:
  .repo_cache/malicious_repos/pypi_malregistry/botaa3/1.0.0/botaa3-1.0.0/boto3-1.20.7/boto3/docs/subresource.py: IyBDb3B5cmlnaHQgMjAxNSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLgojCiMgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIikuIFlvdQojIG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YKIyB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0CiMKIyBodHRwczovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC8KIwojIG9yIGluIHRoZSAibGljZW5zZSIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMKIyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRgojIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYwojIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCmZyb20gYm90b2NvcmUgaW1wb3J0IHhmb3JtX25hbWUKZnJvbSBib3RvY29yZS51dGlscyBpbXBvcnQgZ2V0X3NlcnZpY2VfbW9kdWxlX25hbWUKCmZyb20gYm90bzMuZG9jcy5iYXNlIGltcG9ydCBCYXNlRG9jdW1lbnRlcgpmcm9tIGJvdG8zLmRvY3MudXRpbHMgaW1wb3J0IGdldF9pZGVudGlmaWVyX2FyZ3NfZm9yX3NpZ25hdHVyZQpmcm9tIGJvdG8zLmRvY3MudXRpbHMgaW1wb3J0IGdldF9pZGVudGlmaWVyX3ZhbHVlc19mb3JfZXhhbXBsZQpmcm9tIGJvdG8zLmRvY3MudXRpbHMgaW1wb3J0IGdldF9pZGVudGlmaWVyX2Rlc2NyaXB0aW9uCmZyb20gYm90bzMuZG9jcy51dGlscyBpbXBvcnQgYWRkX3Jlc291cmNlX3R5cGVfb3ZlcnZpZXcKCgpjbGFzcyBTdWJSZXNvdXJjZURvY3VtZW50ZXIoQmFzZURvY3VtZW50ZXIpOgogICAgZGVmIGRvY3VtZW50X3N1Yl9yZXNvdXJjZXMoc2VsZiwgc2VjdGlvbik6CiAgICAgICAgYWRkX3Jlc291cmNlX3R5cGVfb3ZlcnZpZXcoCiAgICAgICAgICAgIHNlY3Rpb249c2VjdGlvbiwKICAgICAgICAgICAgcmVzb3VyY2VfdHlwZT0nU3ViLXJlc291cmNlcycsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uPSgKICAgICAgICAgICAgICAgICdTdWItcmVzb3VyY2VzIGFyZSBtZXRob2RzIHRoYXQgY3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIGEnCiAgICAgICAgICAgICAgICAnIGNoaWxkIHJlc291cmNlLiBUaGlzIHJlc291cmNlXCdzIGlkZW50aWZpZXJzIGdldCBwYXNzZWQnCiAgICAgICAgICAgICAgICAnIGFsb25nIHRvIHRoZSBjaGlsZC4nKSwKICAgICAgICAgICAgaW50cm9fbGluaz0nc3VicmVzb3VyY2VzX2ludHJvJykKICAgICAgICBzdWJfcmVzb3VyY2VzID0gc29ydGVkKAogICAgICAgICAgICBzZWxmLl9yZXNvdXJjZS5tZXRhLnJlc291cmNlX21vZGVsLnN1YnJlc291cmNlcywKICAgICAgICAgICAga2V5PWxhbWJkYSBzdWJfcmVzb3VyY2U6IHN1Yl9yZXNvdXJjZS5uYW1lCiAgICAgICAgKQogICAgICAgIHN1Yl9yZXNvdXJjZXNfbGlzdCA9IFtdCiAgICAgICAgc2VsZi5tZW1iZXJfbWFwWydzdWItcmVzb3VyY2VzJ10gPSBzdWJfcmVzb3VyY2VzX2xpc3QKICAgICAgICBmb3Igc3ViX3Jlc291cmNlIGluIHN1Yl9yZXNvdXJjZXM6CiAgICAgICAgICAgIHN1Yl9yZXNvdXJjZV9zZWN0aW9uID0gc2VjdGlvbi5hZGRfbmV3X3NlY3Rpb24oc3ViX3Jlc291cmNlLm5hbWUpCiAgICAgICAgICAgIHN1Yl9yZXNvdXJjZXNfbGlzdC5hcHBlbmQoc3ViX3Jlc291cmNlLm5hbWUpCiAgICAgICAgICAgIGRvY3VtZW50X3N1Yl9yZXNvdXJjZSgKICAgICAgICAgICAgICAgIHNlY3Rpb249c3ViX3Jlc291cmNlX3NlY3Rpb24sCiAgICAgICAgICAgICAgICByZXNvdXJjZV9uYW1lPXNlbGYuX3Jlc291cmNlX25hbWUsCiAgICAgICAgICAgICAgICBzdWJfcmVzb3VyY2VfbW9kZWw9c3ViX3Jlc291cmNlLAogICAgICAgICAgICAgICAgc2VydmljZV9tb2RlbD1zZWxmLl9zZXJ2aWNlX21vZGVsCiAgICAgICAgICAgICkKCgpkZWYgZG9jdW1lbnRfc3ViX3Jlc291cmNlKHNlY3Rpb24sIHJlc291cmNlX25hbWUsIHN1Yl9yZXNvdXJjZV9tb2RlbCwKICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlX21vZGVsLCBpbmNsdWRlX3NpZ25hdHVyZT1UcnVlKToKICAgICIiIkRvY3VtZW50cyBhIHJlc291cmNlIGFjdGlvbgoKICAgIDpwYXJhbSBzZWN0aW9uOiBUaGUgc2VjdGlvbiB0byB3cml0ZSB0bwoKICAgIDpwYXJhbSByZXNvdXJjZV9uYW1lOiBUaGUgbmFtZSBvZiB0aGUgcmVzb3VyY2UKCiAgICA6cGFyYW0gc3ViX3Jlc291cmNlX21vZGVsOiBUaGUgbW9kZWwgb2YgdGhlIHN1YnJlc291cmNlCgogICAgOnBhcmFtIHNlcnZpY2VfbW9kZWw6IFRoZSBtb2RlbCBvZiB0aGUgc2VydmljZQoKICAgIDpwYXJhbSBpbmNsdWRlX3NpZ25hdHVyZTogV2hldGhlciBvciBub3QgdG8gaW5jbHVkZSB0aGUgc2lnbmF0dXJlLgogICAgICAgIEl0IGlzIHVzZWZ1bCBmb3IgZ2VuZXJhdGluZyBkb2NzdHJpbmdzLgogICAgIiIiCiAgICBpZGVudGlmaWVyc19uZWVkZWQgPSBbXQogICAgZm9yIGlkZW50aWZpZXIgaW4gc3ViX3Jlc291cmNlX21vZGVsLnJlc291cmNlLmlkZW50aWZpZXJzOgogICAgICAgIGlmIGlkZW50aWZpZXIuc291cmNlID09ICdpbnB1dCc6CiAgICAgICAgICAgIGlkZW50aWZpZXJzX25lZWRlZC5hcHBlbmQoeGZvcm1fbmFtZShpZGVudGlmaWVyLnRhcmdldCkpCgogICAgaWYgaW5jbHVkZV9zaWduYXR1cmU6CiAgICAgICAgc2lnbmF0dXJlX2FyZ3MgPSBnZXRfaWRlbnRpZmllcl9hcmdzX2Zvcl9zaWduYXR1cmUoaWRlbnRpZmllcnNfbmVlZGVkKQogICAgICAgIHNlY3Rpb24uc3R5bGUuc3RhcnRfc3BoaW54X3B5X21ldGhvZCgKICAgICAgICAgICAgc3ViX3Jlc291cmNlX21vZGVsLm5hbWUsIHNpZ25hdHVyZV9hcmdzKQoKICAgIG1ldGhvZF9pbnRyb19zZWN0aW9uID0gc2VjdGlvbi5hZGRfbmV3X3NlY3Rpb24oCiAgICAgICAgJ21ldGhvZC1pbnRybycpCiAgICBkZXNjcmlwdGlvbiA9ICdDcmVhdGVzIGEgJXMgcmVzb3VyY2UuJyAlIHN1Yl9yZXNvdXJjZV9tb2RlbC5yZXNvdXJjZS50eXBlCiAgICBtZXRob2RfaW50cm9fc2VjdGlvbi5pbmNsdWRlX2RvY19zdHJpbmcoZGVzY3JpcHRpb24pCiAgICBleGFtcGxlX3NlY3Rpb24gPSBzZWN0aW9uLmFkZF9uZXdfc2VjdGlvbignZXhhbXBsZScpCiAgICBleGFtcGxlX3ZhbHVlcyA9IGdldF9pZGVudGlmaWVyX3ZhbHVlc19mb3JfZXhhbXBsZShpZGVudGlmaWVyc19uZWVkZWQpCiAgICBleGFtcGxlX3Jlc291cmNlX25hbWUgPSB4Zm9ybV9uYW1lKHJlc291cmNlX25hbWUpCiAgICBpZiBzZXJ2aWNlX21vZGVsLnNlcnZpY2VfbmFtZSA9PSByZXNvdXJjZV9uYW1lOgogICAgICAgIGV4YW1wbGVfcmVzb3VyY2VfbmFtZSA9IHJlc291cmNlX25hbWUKICAgIGV4YW1wbGUgPSAnJXMgPSAlcy4lcyglcyknICUgKAogICAgICAgIHhmb3JtX25hbWUoc3ViX3Jlc291cmNlX21vZGVsLnJlc291cmNlLnR5cGUpLAogICAgICAgIGV4YW1wbGVfcmVzb3VyY2VfbmFtZSwKICAgICAgICBzdWJfcmVzb3VyY2VfbW9kZWwubmFtZSwgZXhhbXBsZV92YWx1ZXMKICAgICkKICAgIGV4YW1wbGVfc2VjdGlvbi5zdHlsZS5zdGFydF9jb2RlYmxvY2soKQogICAgZXhhbXBsZV9zZWN0aW9uLndyaXRlKGV4YW1wbGUpCiAgICBleGFtcGxlX3NlY3Rpb24uc3R5bGUuZW5kX2NvZGVibG9jaygpCgogICAgcGFyYW1fc2VjdGlvbiA9IHNlY3Rpb24uYWRkX25ld19zZWN0aW9uKCdwYXJhbXMnKQogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnNfbmVlZGVkOgogICAgICAgIGRlc2NyaXB0aW9uID0gZ2V0X2lkZW50aWZpZXJfZGVzY3JpcHRpb24oCiAgICAgICAgICAgIHN1Yl9yZXNvdXJjZV9tb2RlbC5uYW1lLCBpZGVudGlmaWVyKQogICAgICAgIHBhcmFtX3NlY3Rpb24ud3JpdGUoJzp0eXBlICVzOiBzdHJpbmcnICUgaWRlbnRpZmllcikKICAgICAgICBwYXJhbV9zZWN0aW9uLnN0eWxlLm5ld19saW5lKCkKICAgICAgICBwYXJhbV9zZWN0aW9uLndyaXRlKCc6cGFyYW0gJXM6ICVzJyAlICgKICAgICAgICAgICAgaWRlbnRpZmllciwgZGVzY3JpcHRpb24pKQogICAgICAgIHBhcmFtX3NlY3Rpb24uc3R5bGUubmV3X2xpbmUoKQoKICAgIHJldHVybl9zZWN0aW9uID0gc2VjdGlvbi5hZGRfbmV3X3NlY3Rpb24oJ3JldHVybicpCiAgICByZXR1cm5fc2VjdGlvbi5zdHlsZS5uZXdfbGluZSgpCiAgICByZXR1cm5fc2VjdGlvbi53cml0ZSgKICAgICAgICAnOnJ0eXBlOiA6cHk6Y2xhc3M6YCVzLiVzYCcgJSAoCiAgICAgICAgICAgIGdldF9zZXJ2aWNlX21vZHVsZV9uYW1lKHNlcnZpY2VfbW9kZWwpLAogICAgICAgICAgICBzdWJfcmVzb3VyY2VfbW9kZWwucmVzb3VyY2UudHlwZSkpCiAgICByZXR1cm5fc2VjdGlvbi5zdHlsZS5uZXdfbGluZSgpCiAgICByZXR1cm5fc2VjdGlvbi53cml0ZSgKICAgICAgICAnOnJldHVybnM6IEEgJXMgcmVzb3VyY2UnICUgc3ViX3Jlc291cmNlX21vZGVsLnJlc291cmNlLnR5cGUpCiAgICByZXR1cm5fc2VjdGlvbi5zdHlsZS5uZXdfbGluZSgpCg==
