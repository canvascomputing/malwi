statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/pycryptoenv/_win/_cng.py
  contents:
  - name: handle_error
    score: 0.0
    code: |-
      def handle_error(error_num):
          """
          Extracts the last Windows error message into a python unicode string

          :param error_num:
              The number to get the error string for

          :return:
              A unicode string error message
          """

          if error_num == 0:
              return

          messages = {
              BcryptConst.STATUS_NOT_FOUND: 'The object was not found',
              BcryptConst.STATUS_INVALID_PARAMETER: 'An invalid parameter was passed to a service or function',
              BcryptConst.STATUS_NO_MEMORY: (
                  'Not enough virtual memory or paging file quota is available to complete the specified operation'
              ),
              BcryptConst.STATUS_INVALID_HANDLE: 'An invalid HANDLE was specified',
              BcryptConst.STATUS_INVALID_SIGNATURE: 'The cryptographic signature is invalid',
              BcryptConst.STATUS_NOT_SUPPORTED: 'The request is not supported',
              BcryptConst.STATUS_BUFFER_TOO_SMALL: 'The buffer is too small to contain the entry',
              BcryptConst.STATUS_INVALID_BUFFER_SIZE: 'The size of the buffer is invalid for the specified operation',
          }

          output = 'NTSTATUS error 0x%0.2X' % error_num

          if error_num is not None and error_num in messages:
              output += ': ' + messages[error_num]

          raise OSError(output)
    tokens: 'resume load_fast error_num load_const INTEGER compare_op == pop_jump_if_false TO_NUMBER return_const None load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH load_global BcryptConst load_attr STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH build_map store_fast messages load_const STRING_LEN_S_ENT_HIGH load_fast error_num binary_op % store_fast output load_fast error_num pop_jump_if_none TO_NUMBER load_fast error_num load_fast messages contains_op pop_jump_if_false TO_NUMBER load_fast output load_const : load_fast messages load_fast error_num binary_subscr binary_op + binary_op += store_fast output load_global OSError load_fast output call raise_varargs'
    hash: 3a8ee0527fc41343a36e2b25dd553056c310ff4d90715fa4bfab1dac63792037
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/pycryptoenv/_win/_cng.py
  : IyBjb2Rpbmc6IHV0Zi04CmZyb20gX19mdXR1cmVfXyBpbXBvcnQgdW5pY29kZV9saXRlcmFscywgZGl2aXNpb24sIGFic29sdXRlX2ltcG9ydCwgcHJpbnRfZnVuY3Rpb24KCmZyb20gLi4gaW1wb3J0IGZmaQpmcm9tIC4uX2ZmaSBpbXBvcnQgbmV3LCBudWxsLCB1bndyYXAKCmlmIGZmaSgpID09ICdjZmZpJzoKICAgIGZyb20gLl9jbmdfY2ZmaSBpbXBvcnQgYmNyeXB0CmVsc2U6CiAgICBmcm9tIC5fY25nX2N0eXBlcyBpbXBvcnQgYmNyeXB0CgoKX19hbGxfXyA9IFsKICAgICdiY3J5cHQnLAogICAgJ0JjcnlwdENvbnN0JywKICAgICdjbG9zZV9hbGdfaGFuZGxlJywKICAgICdoYW5kbGVfZXJyb3InLAogICAgJ29wZW5fYWxnX2hhbmRsZScsCl0KCgpkZWYgb3Blbl9hbGdfaGFuZGxlKGNvbnN0YW50LCBmbGFncz0wKToKICAgIGhhbmRsZV9wb2ludGVyID0gbmV3KGJjcnlwdCwgJ0JDUllQVF9BTEdfSEFORExFIConKQogICAgcmVzID0gYmNyeXB0LkJDcnlwdE9wZW5BbGdvcml0aG1Qcm92aWRlcihoYW5kbGVfcG9pbnRlciwgY29uc3RhbnQsIG51bGwoKSwgZmxhZ3MpCiAgICBoYW5kbGVfZXJyb3IocmVzKQoKICAgIHJldHVybiB1bndyYXAoaGFuZGxlX3BvaW50ZXIpCgoKZGVmIGNsb3NlX2FsZ19oYW5kbGUoaGFuZGxlKToKICAgIHJlcyA9IGJjcnlwdC5CQ3J5cHRDbG9zZUFsZ29yaXRobVByb3ZpZGVyKGhhbmRsZSwgMCkKICAgIGhhbmRsZV9lcnJvcihyZXMpCgoKZGVmIGhhbmRsZV9lcnJvcihlcnJvcl9udW0pOgogICAgIiIiCiAgICBFeHRyYWN0cyB0aGUgbGFzdCBXaW5kb3dzIGVycm9yIG1lc3NhZ2UgaW50byBhIHB5dGhvbiB1bmljb2RlIHN0cmluZwoKICAgIDpwYXJhbSBlcnJvcl9udW06CiAgICAgICAgVGhlIG51bWJlciB0byBnZXQgdGhlIGVycm9yIHN0cmluZyBmb3IKCiAgICA6cmV0dXJuOgogICAgICAgIEEgdW5pY29kZSBzdHJpbmcgZXJyb3IgbWVzc2FnZQogICAgIiIiCgogICAgaWYgZXJyb3JfbnVtID09IDA6CiAgICAgICAgcmV0dXJuCgogICAgbWVzc2FnZXMgPSB7CiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX05PVF9GT1VORDogJ1RoZSBvYmplY3Qgd2FzIG5vdCBmb3VuZCcsCiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX0lOVkFMSURfUEFSQU1FVEVSOiAnQW4gaW52YWxpZCBwYXJhbWV0ZXIgd2FzIHBhc3NlZCB0byBhIHNlcnZpY2Ugb3IgZnVuY3Rpb24nLAogICAgICAgIEJjcnlwdENvbnN0LlNUQVRVU19OT19NRU1PUlk6ICgKICAgICAgICAgICAgJ05vdCBlbm91Z2ggdmlydHVhbCBtZW1vcnkgb3IgcGFnaW5nIGZpbGUgcXVvdGEgaXMgYXZhaWxhYmxlIHRvIGNvbXBsZXRlIHRoZSBzcGVjaWZpZWQgb3BlcmF0aW9uJwogICAgICAgICksCiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX0lOVkFMSURfSEFORExFOiAnQW4gaW52YWxpZCBIQU5ETEUgd2FzIHNwZWNpZmllZCcsCiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX0lOVkFMSURfU0lHTkFUVVJFOiAnVGhlIGNyeXB0b2dyYXBoaWMgc2lnbmF0dXJlIGlzIGludmFsaWQnLAogICAgICAgIEJjcnlwdENvbnN0LlNUQVRVU19OT1RfU1VQUE9SVEVEOiAnVGhlIHJlcXVlc3QgaXMgbm90IHN1cHBvcnRlZCcsCiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX0JVRkZFUl9UT09fU01BTEw6ICdUaGUgYnVmZmVyIGlzIHRvbyBzbWFsbCB0byBjb250YWluIHRoZSBlbnRyeScsCiAgICAgICAgQmNyeXB0Q29uc3QuU1RBVFVTX0lOVkFMSURfQlVGRkVSX1NJWkU6ICdUaGUgc2l6ZSBvZiB0aGUgYnVmZmVyIGlzIGludmFsaWQgZm9yIHRoZSBzcGVjaWZpZWQgb3BlcmF0aW9uJywKICAgIH0KCiAgICBvdXRwdXQgPSAnTlRTVEFUVVMgZXJyb3IgMHglMC4yWCcgJSBlcnJvcl9udW0KCiAgICBpZiBlcnJvcl9udW0gaXMgbm90IE5vbmUgYW5kIGVycm9yX251bSBpbiBtZXNzYWdlczoKICAgICAgICBvdXRwdXQgKz0gJzogJyArIG1lc3NhZ2VzW2Vycm9yX251bV0KCiAgICByYWlzZSBPU0Vycm9yKG91dHB1dCkKCgpjbGFzcyBCY3J5cHRDb25zdCgpOgogICAgQkNSWVBUX1JOR19BTEdPUklUSE0gPSAnUk5HJwoKICAgIEJDUllQVF9LRVlfTEVOR1RIID0gJ0tleUxlbmd0aCcKICAgIEJDUllQVF9FRkZFQ1RJVkVfS0VZX0xFTkdUSCA9ICdFZmZlY3RpdmVLZXlMZW5ndGgnCgogICAgQkNSWVBUX1JTQVBSSVZBVEVfQkxPQiA9ICdSU0FQUklWQVRFQkxPQicKICAgIEJDUllQVF9SU0FGVUxMUFJJVkFURV9CTE9CID0gJ1JTQUZVTExQUklWQVRFQkxPQicKICAgIEJDUllQVF9SU0FQVUJMSUNfQkxPQiA9ICdSU0FQVUJMSUNCTE9CJwogICAgQkNSWVBUX0RTQV9QUklWQVRFX0JMT0IgPSAnRFNBUFJJVkFURUJMT0InCiAgICBCQ1JZUFRfRFNBX1BVQkxJQ19CTE9CID0gJ0RTQVBVQkxJQ0JMT0InCiAgICBCQ1JZUFRfRUNDUFJJVkFURV9CTE9CID0gJ0VDQ1BSSVZBVEVCTE9CJwogICAgQkNSWVBUX0VDQ1BVQkxJQ19CTE9CID0gJ0VDQ1BVQkxJQ0JMT0InCgogICAgQkNSWVBUX1JTQVBVQkxJQ19NQUdJQyA9IDB4MzE0MTUzNTIKICAgIEJDUllQVF9SU0FQUklWQVRFX01BR0lDID0gMHgzMjQxNTM1MgogICAgQkNSWVBUX1JTQUZVTExQUklWQVRFX01BR0lDID0gMHgzMzQxNTM1MgoKICAgIEJDUllQVF9EU0FfUFVCTElDX01BR0lDID0gMHg0MjUwNTM0NAogICAgQkNSWVBUX0RTQV9QUklWQVRFX01BR0lDID0gMHg1NjUwNTM0NAogICAgQkNSWVBUX0RTQV9QVUJMSUNfTUFHSUNfVjIgPSAweDMyNDI1MDQ0CiAgICBCQ1JZUFRfRFNBX1BSSVZBVEVfTUFHSUNfVjIgPSAweDMyNTY1MDQ0CgogICAgRFNBX0hBU0hfQUxHT1JJVEhNX1NIQTEgPSAwCiAgICBEU0FfSEFTSF9BTEdPUklUSE1fU0hBMjU2ID0gMQogICAgRFNBX0hBU0hfQUxHT1JJVEhNX1NIQTUxMiA9IDIKCiAgICBEU0FfRklQUzE4Nl8yID0gMAogICAgRFNBX0ZJUFMxODZfMyA9IDEKCiAgICBCQ1JZUFRfTk9fS0VZX1ZBTElEQVRJT04gPSA4CgogICAgQkNSWVBUX0VDRFNBX1BVQkxJQ19QMjU2X01BR0lDID0gMHgzMTUzNDM0NQogICAgQkNSWVBUX0VDRFNBX1BSSVZBVEVfUDI1Nl9NQUdJQyA9IDB4MzI1MzQzNDUKICAgIEJDUllQVF9FQ0RTQV9QVUJMSUNfUDM4NF9NQUdJQyA9IDB4MzM1MzQzNDUKICAgIEJDUllQVF9FQ0RTQV9QUklWQVRFX1AzODRfTUFHSUMgPSAweDM0NTM0MzQ1CiAgICBCQ1JZUFRfRUNEU0FfUFVCTElDX1A1MjFfTUFHSUMgPSAweDM1NTM0MzQ1CiAgICBCQ1JZUFRfRUNEU0FfUFJJVkFURV9QNTIxX01BR0lDID0gMHgzNjUzNDM0NQoKICAgIFNUQVRVU19TVUNDRVNTID0gMHgwMDAwMDAwMAogICAgU1RBVFVTX05PVF9GT1VORCA9IDB4QzAwMDAyMjUKICAgIFNUQVRVU19JTlZBTElEX1BBUkFNRVRFUiA9IDB4QzAwMDAwMEQKICAgIFNUQVRVU19OT19NRU1PUlkgPSAweEMwMDAwMDE3CiAgICBTVEFUVVNfSU5WQUxJRF9IQU5ETEUgPSAweEMwMDAwMDA4CiAgICBTVEFUVVNfSU5WQUxJRF9TSUdOQVRVUkUgPSAweEMwMDBBMDAwCiAgICBTVEFUVVNfTk9UX1NVUFBPUlRFRCA9IDB4QzAwMDAwQkIKICAgIFNUQVRVU19CVUZGRVJfVE9PX1NNQUxMID0gMHhDMDAwMDAyMwogICAgU1RBVFVTX0lOVkFMSURfQlVGRkVSX1NJWkUgPSAweEMwMDAwMjA2CgogICAgQkNSWVBUX0tFWV9EQVRBX0JMT0JfTUFHSUMgPSAweDRkNDI0NDRiCiAgICBCQ1JZUFRfS0VZX0RBVEFfQkxPQl9WRVJTSU9OMSA9IDB4MDAwMDAwMDEKICAgIEJDUllQVF9LRVlfREFUQV9CTE9CID0gJ0tleURhdGFCbG9iJwoKICAgIEJDUllQVF9QQURfUEtDUzEgPSAweDAwMDAwMDAyCiAgICBCQ1JZUFRfUEFEX09BRVAgPSAweDAwMDAwMDA0CiAgICBCQ1JZUFRfUEFEX1BTUyA9IDB4MDAwMDAwMDgKCiAgICBCQ1JZUFRfM0RFU19BTEdPUklUSE0gPSAnM0RFUycKICAgIEJDUllQVF8zREVTXzExMl9BTEdPUklUSE0gPSAnM0RFU18xMTInCiAgICBCQ1JZUFRfQUVTX0FMR09SSVRITSA9ICdBRVMnCiAgICBCQ1JZUFRfREVTX0FMR09SSVRITSA9ICdERVMnCiAgICBCQ1JZUFRfUkMyX0FMR09SSVRITSA9ICdSQzInCiAgICBCQ1JZUFRfUkM0X0FMR09SSVRITSA9ICdSQzQnCgogICAgQkNSWVBUX0RTQV9BTEdPUklUSE0gPSAnRFNBJwogICAgQkNSWVBUX0VDRFNBX1AyNTZfQUxHT1JJVEhNID0gJ0VDRFNBX1AyNTYnCiAgICBCQ1JZUFRfRUNEU0FfUDM4NF9BTEdPUklUSE0gPSAnRUNEU0FfUDM4NCcKICAgIEJDUllQVF9FQ0RTQV9QNTIxX0FMR09SSVRITSA9ICdFQ0RTQV9QNTIxJwogICAgQkNSWVBUX1JTQV9BTEdPUklUSE0gPSAnUlNBJwoKICAgIEJDUllQVF9NRDVfQUxHT1JJVEhNID0gJ01ENScKICAgIEJDUllQVF9TSEExX0FMR09SSVRITSA9ICdTSEExJwogICAgQkNSWVBUX1NIQTI1Nl9BTEdPUklUSE0gPSAnU0hBMjU2JwogICAgQkNSWVBUX1NIQTM4NF9BTEdPUklUSE0gPSAnU0hBMzg0JwogICAgQkNSWVBUX1NIQTUxMl9BTEdPUklUSE0gPSAnU0hBNTEyJwoKICAgIEJDUllQVF9BTEdfSEFORExFX0hNQUNfRkxBRyA9IDB4MDAwMDAwMDgKCiAgICBCQ1JZUFRfQkxPQ0tfUEFERElORyA9IDB4MDAwMDAwMDEK
