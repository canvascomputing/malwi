statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/auth/signers/rsa_key_pair_signer.py
  contents:
  - name: RsaKeyPairSigner.__init__
    score: 0.0
    code: |-
      def __init__(self, credential, region_id, debug=False):
              if credential.session_period < self._MIN_SESSION_PERIOD or \
                 credential.session_period > self._MAX_SESSION_PERIOD:
                  raise exceptions.ClientException(
                      error_code.SDK_INVALID_SESSION_EXPIRATION,
                      error_msg.get_msg('SDK_INVALID_SESSION_EXPIRATION').format(
                          self._MIN_SESSION_PERIOD,
                          self._MAX_SESSION_PERIOD))
              credential.region_id = region_id
              self._public_key_id = credential.public_key_id
              self._private_key = credential.private_key
              self._session_period = credential.session_period
              self._last_update_time = 0
              # self._schedule_interval = credential.session_period if debug \
              #     else max(credential.session_period * 0.8, 5)
              from aliyunsdkcore.client import AcsClient
              self._sts_client = AcsClient(
                  self._public_key_id, self._private_key, credential.region_id)
              self._session_credential = None
    tokens: resume load_fast credential load_attr session_period load_fast self load_attr STRING_LEN_S_ENT_HIGH compare_op < pop_jump_if_true TO_NUMBER load_fast credential load_attr session_period load_fast self load_attr STRING_LEN_S_ENT_HIGH compare_op > pop_jump_if_false TO_NUMBER load_global exceptions load_attr ClientException load_global error_code load_attr STRING_LEN_S_ENT_HIGH load_global error_msg load_attr get_msg load_const STRING_LEN_S_ENT_HIGH call load_attr format load_fast self load_attr STRING_LEN_S_ENT_HIGH load_fast self load_attr STRING_LEN_S_ENT_HIGH call call raise_varargs load_fast region_id load_fast credential store_attr region_id load_fast credential load_attr public_key_id load_fast self store_attr _public_key_id load_fast credential load_attr private_key load_fast self store_attr _private_key load_fast credential load_attr session_period load_fast self store_attr _session_period load_const INTEGER load_fast self store_attr STRING_LEN_S_ENT_HIGH load_const INTEGER load_const import_name STRING_LEN_S_ENT_HIGH import_from AcsClient store_fast AcsClient pop_top push_null load_fast AcsClient load_fast self load_attr _public_key_id load_fast self load_attr _private_key load_fast credential load_attr region_id call load_fast self store_attr _sts_client load_const load_fast self store_attr STRING_LEN_S_ENT_HIGH return_const None
    hash: d143a049b9bbff9b331ac3b45f9b44fa8336b0a91a8b405df8570a741d0b8f10
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/auth/signers/rsa_key_pair_signer.py
  : IyBjb2Rpbmc6dXRmLTgKaW1wb3J0IGpzb24KaW1wb3J0IHRpbWUKaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IHNvY2tldAoKZnJvbSBhbGl5dW5zZGtjb3JlLmF1dGguc2lnbmVycy5zaWduZXIgaW1wb3J0IFNpZ25lcgpmcm9tIGFsaXl1bnNka2NvcmUuYWNzX2V4Y2VwdGlvbiBpbXBvcnQgZXJyb3JfY29kZQpmcm9tIGFsaXl1bnNka2NvcmUuYWNzX2V4Y2VwdGlvbiBpbXBvcnQgZXJyb3JfbXNnCmZyb20gYWxpeXVuc2RrY29yZS5hY3NfZXhjZXB0aW9uIGltcG9ydCBleGNlcHRpb25zCmZyb20gYWxpeXVuc2RrY29yZS5yZXF1ZXN0IGltcG9ydCBScGNSZXF1ZXN0CmZyb20gYWxpeXVuc2RrY29yZS5hdXRoLmFsZ29yaXRobSBpbXBvcnQgc2hhX2htYWMyNTYKCmxvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmNsYXNzIFJzYUtleVBhaXJTaWduZXIoU2lnbmVyKToKICAgIF9NSU5fU0VTU0lPTl9QRVJJT0QgPSA5MDAKICAgIF9NQVhfU0VTU0lPTl9QRVJJT0QgPSAzNjAwCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGNyZWRlbnRpYWwsIHJlZ2lvbl9pZCwgZGVidWc9RmFsc2UpOgogICAgICAgIGlmIGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgPCBzZWxmLl9NSU5fU0VTU0lPTl9QRVJJT0Qgb3IgXAogICAgICAgICAgIGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgPiBzZWxmLl9NQVhfU0VTU0lPTl9QRVJJT0Q6CiAgICAgICAgICAgIHJhaXNlIGV4Y2VwdGlvbnMuQ2xpZW50RXhjZXB0aW9uKAogICAgICAgICAgICAgICAgZXJyb3JfY29kZS5TREtfSU5WQUxJRF9TRVNTSU9OX0VYUElSQVRJT04sCiAgICAgICAgICAgICAgICBlcnJvcl9tc2cuZ2V0X21zZygnU0RLX0lOVkFMSURfU0VTU0lPTl9FWFBJUkFUSU9OJykuZm9ybWF0KAogICAgICAgICAgICAgICAgICAgIHNlbGYuX01JTl9TRVNTSU9OX1BFUklPRCwKICAgICAgICAgICAgICAgICAgICBzZWxmLl9NQVhfU0VTU0lPTl9QRVJJT0QpKQogICAgICAgIGNyZWRlbnRpYWwucmVnaW9uX2lkID0gcmVnaW9uX2lkCiAgICAgICAgc2VsZi5fcHVibGljX2tleV9pZCA9IGNyZWRlbnRpYWwucHVibGljX2tleV9pZAogICAgICAgIHNlbGYuX3ByaXZhdGVfa2V5ID0gY3JlZGVudGlhbC5wcml2YXRlX2tleQogICAgICAgIHNlbGYuX3Nlc3Npb25fcGVyaW9kID0gY3JlZGVudGlhbC5zZXNzaW9uX3BlcmlvZAogICAgICAgIHNlbGYuX2xhc3RfdXBkYXRlX3RpbWUgPSAwCiAgICAgICAgIyBzZWxmLl9zY2hlZHVsZV9pbnRlcnZhbCA9IGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgaWYgZGVidWcgXAogICAgICAgICMgICAgIGVsc2UgbWF4KGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgKiAwLjgsIDUpCiAgICAgICAgZnJvbSBhbGl5dW5zZGtjb3JlLmNsaWVudCBpbXBvcnQgQWNzQ2xpZW50CiAgICAgICAgc2VsZi5fc3RzX2NsaWVudCA9IEFjc0NsaWVudCgKICAgICAgICAgICAgc2VsZi5fcHVibGljX2tleV9pZCwgc2VsZi5fcHJpdmF0ZV9rZXksIGNyZWRlbnRpYWwucmVnaW9uX2lkKQogICAgICAgIHNlbGYuX3Nlc3Npb25fY3JlZGVudGlhbCA9IE5vbmUKCiAgICBkZWYgc2lnbihzZWxmLCByZWdpb25faWQsIHJlcXVlc3QpOgogICAgICAgIHNlbGYuX2NoZWNrX3Nlc3Npb25fY3JlZGVudGlhbCgpCiAgICAgICAgc2Vzc2lvbl9haywgc2Vzc2lvbl9zayA9IHNlbGYuX3Nlc3Npb25fY3JlZGVudGlhbAogICAgICAgIGhlYWRlciA9IHJlcXVlc3QuZ2V0X3NpZ25lZF9oZWFkZXIocmVnaW9uX2lkLCBzZXNzaW9uX2FrLCBzZXNzaW9uX3NrKQogICAgICAgIHVybCA9IHJlcXVlc3QuZ2V0X3VybChyZWdpb25faWQsIHNlc3Npb25fYWssIHNlc3Npb25fc2spCiAgICAgICAgcmV0dXJuIGhlYWRlciwgdXJsCgogICAgZGVmIF9jaGVja19zZXNzaW9uX2NyZWRlbnRpYWwoc2VsZik6CiAgICAgICAgaWYgc2VsZi5fc2Vzc2lvbl9jcmVkZW50aWFsIGlzIE5vbmU6CiAgICAgICAgICAgIHNlbGYuX2dldF9zZXNzaW9uX2FrX2FuZF9zaygpCiAgICAgICAgICAgIHJldHVybgoKICAgICAgICBub3cgPSBpbnQodGltZS50aW1lKCkpCiAgICAgICAgaWYgbm93IC0gc2VsZi5fbGFzdF91cGRhdGVfdGltZSA+IChzZWxmLl9zZXNzaW9uX3BlcmlvZCAqIDAuOCk6CiAgICAgICAgICAgIHNlbGYuX2dldF9zZXNzaW9uX2FrX2FuZF9zaygpCgogICAgZGVmIF9nZXRfc2Vzc2lvbl9ha19hbmRfc2soc2VsZik6CiAgICAgICAgcmVxdWVzdCA9IEdldFNlc3Npb25Ba1JlcXVlc3QoKQogICAgICAgIHJlcXVlc3Quc2V0X21ldGhvZCgiR0VUIikKICAgICAgICByZXF1ZXN0LnNldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYuX3Nlc3Npb25fcGVyaW9kKQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJlc3BvbnNlX3N0ciA9IHNlbGYuX3N0c19jbGllbnQuZG9fYWN0aW9uX3dpdGhfZXhjZXB0aW9uKHJlcXVlc3QpCiAgICAgICAgICAgIHJlc3BvbnNlID0ganNvbi5sb2FkcyhyZXNwb25zZV9zdHIuZGVjb2RlKCd1dGYtOCcpKQogICAgICAgICAgICBzZXNzaW9uX2FrID0gc3RyKHJlc3BvbnNlLmdldCgKICAgICAgICAgICAgICAgICJTZXNzaW9uQWNjZXNzS2V5IikuZ2V0KCJTZXNzaW9uQWNjZXNzS2V5SWQiKSkKICAgICAgICAgICAgc2Vzc2lvbl9zayA9IHN0cihyZXNwb25zZS5nZXQoCiAgICAgICAgICAgICAgICAiU2Vzc2lvbkFjY2Vzc0tleSIpLmdldCgiU2Vzc2lvbkFjY2Vzc0tleVNlY3JldCIpKQoKICAgICAgICAgICAgc2VsZi5fc2Vzc2lvbl9jcmVkZW50aWFsID0gc2Vzc2lvbl9haywgc2Vzc2lvbl9zawogICAgICAgICAgICBzZWxmLl9sYXN0X3VwZGF0ZV90aW1lID0gaW50KHRpbWUudGltZSgpKQogICAgICAgIGV4Y2VwdCBleGNlcHRpb25zLlNlcnZlckV4Y2VwdGlvbiBhcyBzcnZfZXg6CiAgICAgICAgICAgIGlmIHNydl9leC5lcnJvcl9jb2RlID09ICdJbnZhbGlkQWNjZXNzS2V5SWQuTm90Rm91bmQnIG9yIFwKICAgICAgICAgICAgICAgc3J2X2V4LmVycm9yX2NvZGUgPT0gJ1NpZ25hdHVyZURvZXNOb3RNYXRjaCc6CiAgICAgICAgICAgICAgICByYWlzZSBleGNlcHRpb25zLkNsaWVudEV4Y2VwdGlvbihlcnJvcl9jb2RlLlNES19JTlZBTElEX0NSRURFTlRJQUwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cuZ2V0X21zZygnU0RLX0lOVkFMSURfQ1JFREVOVElBTCcpKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmFpc2UKCgpjbGFzcyBHZXRTZXNzaW9uQWtSZXF1ZXN0KFJwY1JlcXVlc3QpOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIFJwY1JlcXVlc3QuX19pbml0X18oc2VsZiwgcHJvZHVjdD0nU3RzJywgdmVyc2lvbj0nMjAxNS0wNC0wMScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25fbmFtZT0nR2VuZXJhdGVTZXNzaW9uQWNjZXNzS2V5JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25lcj1zaGFfaG1hYzI1NikKICAgICAgICBzZWxmLnNldF9wcm90b2NvbF90eXBlKCdodHRwcycpCgogICAgZGVmIGdldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYpOgogICAgICAgIHJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoIkR1cmF0aW9uU2Vjb25kcyIpCgogICAgZGVmIHNldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYsIGR1cmF0aW9uX3NlY29uZHMpOgogICAgICAgIHNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdEdXJhdGlvblNlY29uZHMnLCBkdXJhdGlvbl9zZWNvbmRzKQoKICAgIGRlZiBnZXRfcHVibGljX2tleV9pZChzZWxmKToKICAgICAgICByZXR1cm4gc2VsZi5nZXRfcXVlcnlfcGFyYW1zKCkuZ2V0KCdQdWJsaWNLZXlJZCcpCgogICAgZGVmIHNldF9wdWJsaWNfa2V5X2lkKHNlbGYsIHB1YmxpY19rZXlfaWQpOgogICAgICAgIHNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdQdWJsaWNLZXlJZCcsIHB1YmxpY19rZXlfaWQpCg==
