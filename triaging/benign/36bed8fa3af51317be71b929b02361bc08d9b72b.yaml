statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/template.py
  contents:
  - name: Template
    score: 0.0
    code: |-
      def __getattr__(self, attr):
              raise AttributeError('PartialTemplateState does not support {0!r}.'.format(attr))
    tokens: resume load_name __name__ store_name __module__ load_const Template store_name __qualname__ load_const STRING_LEN_M_ENT_HIGH store_name __doc__ load_const OBJECT make_function store_name __init__ load_const OBJECT make_function store_name _store load_const OBJECT make_function store_name __repr__ load_const load_const OBJECT make_function defaults store_name create_guild load_const OBJECT make_function store_name sync load_const OBJECT make_function store_name edit load_const OBJECT make_function store_name delete return_const None
    hash: ac764955776f68e753729fc395bcd5740b3890af5affd6619aed60f5b0b2ba8e
sources:
  .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/template.py: 
