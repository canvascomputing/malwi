statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/setup.py
  contents:
  - name: <module>
    score: 0.0
    code: |-
      import codecs
      import os
      import shutil
      import sys
      import warnings

      import setuptools
      from setuptools import find_packages, setup, Command
      from setuptools.command.egg_info import egg_info


      PACKAGE_NAME = 'pycryptoenv'
      PACKAGE_VERSION = '1.0.7'
      PACKAGE_ROOT = os.path.dirname(os.path.abspath(__file__))


      # setuptools 38.6.0 and newer know about long_description_content_type, but
      # distutils still complains about it, so silence the warning
      sv = setuptools.__version__
      svi = tuple(int(o) if o.isdigit() else o for o in sv.split('.'))
      if svi >= (38, 6):
          warnings.filterwarnings(
              'ignore',
              "Unknown distribution option: 'long_description_content_type'",
              module='distutils.dist'
          )


      # Try to load the tests first from the source repository layout. If that
      # doesn't work, we assume this file is in the release package, and the tests
      # are part of the package {PACKAGE_NAME}_tests.
      if os.path.exists(os.path.join(PACKAGE_ROOT, 'tests')):
          tests_require = []
          test_suite = 'tests.make_suite'
      else:
          tests_require = ['%s_tests' % PACKAGE_NAME]
          test_suite = '%s_tests.make_suite' % PACKAGE_NAME


      # This allows us to send the LICENSE and docs when creating a sdist. Wheels
      # automatically include the LICENSE, and don't need the docs. For these
      # to be included, the command must be "python setup.py sdist".
      package_data = {}
      if sys.argv[1:] == ['sdist'] or sorted(sys.argv[1:]) == ['-q', 'sdist']:
          package_data[PACKAGE_NAME] = [
              '../LICENSE',
              '../*.md',
              '../docs/*.md',
          ]


      # Ensures a copy of the LICENSE is included with the egg-info for
      # install and bdist_egg commands
      class EggInfoCommand(egg_info):
          def run(self):
              egg_info_path = os.path.join(
                  PACKAGE_ROOT,
                  '%s.egg-info' % PACKAGE_NAME
              )
              if not os.path.exists(egg_info_path):
                  os.mkdir(egg_info_path)
              shutil.copy2(
                  os.path.join(PACKAGE_ROOT, 'LICENSE'),
                  os.path.join(egg_info_path, 'LICENSE')
              )
              egg_info.run(self)
    tokens: TARGETED_FILE resume load_const INTEGER load_const import_name codecs store_name codecs load_const INTEGER load_const import_name os store_name os load_const INTEGER load_const import_name shutil store_name shutil load_const INTEGER load_const import_name sys store_name sys load_const INTEGER load_const import_name warnings store_name warnings load_const INTEGER load_const import_name setuptools store_name setuptools load_const INTEGER load_const import_name setuptools import_from find_packages store_name find_packages import_from setup store_name setup import_from Command store_name Command pop_top load_const INTEGER load_const import_name STRING_LEN_S_ENT_HIGH import_from egg_info store_name egg_info pop_top load_const pycryptoenv store_name PACKAGE_NAME load_const 1.0.7 store_name PACKAGE_VERSION load_name os load_attr path load_attr dirname load_name os load_attr path load_attr abspath load_name __file__ call call store_name PACKAGE_ROOT load_name setuptools load_attr __version__ store_name sv push_null load_name tuple load_const OBJECT make_function load_name sv load_attr split load_const . call get_iter call call store_name svi load_name svi load_const compare_op >= pop_jump_if_false TO_NUMBER push_null load_name warnings load_attr filterwarnings load_const ignore load_const STRING_LEN_S_ENT_HIGH load_const distutils.dist kw_names module call pop_top load_name os load_attr path load_attr exists load_name os load_attr path load_attr join load_name PACKAGE_ROOT load_const tests call call pop_jump_if_false TO_NUMBER build_list store_name tests_require load_const STRING_LEN_S_ENT_HIGH store_name test_suite jump_forward TO_NUMBER load_const %s_tests load_name PACKAGE_NAME binary_op % build_list store_name tests_require load_const STRING_LEN_S_ENT_HIGH load_name PACKAGE_NAME binary_op % store_name test_suite build_map store_name package_data load_name sys load_attr argv load_const INTEGER load_const binary_slice load_const sdist build_list compare_op == pop_jump_if_true TO_NUMBER push_null load_name sorted load_name sys load_attr argv load_const INTEGER load_const binary_slice call load_const -q load_const sdist build_list compare_op == pop_jump_if_false TO_NUMBER build_list load_const list_extend load_name package_data load_name PACKAGE_NAME store_subscr push_null load_build_class load_const OBJECT make_function load_const EggInfoCommand load_name egg_info call store_name EggInfoCommand push_null load_build_class load_const OBJECT make_function load_const CleanCommand load_name Command call store_name CleanCommand load_const store_name readme push_null load_name codecs load_attr FILESYSTEM_ACCESS load_name os load_attr path load_attr join load_name PACKAGE_ROOT load_const readme.md call load_const r load_const utf-8 call before_with store_name f load_name f load_attr read call store_name readme load_const load_const load_const call pop_top push_null load_name setup load_const build_map load_const name load_name PACKAGE_NAME map_add load_const version load_name PACKAGE_VERSION map_add load_const description load_const STRING_FILE_PATH map_add load_const STRING_LEN_S_ENT_HIGH load_name readme map_add load_const STRING_LEN_S_ENT_HIGH load_const STRING_FILE_PATH map_add load_const url load_const STRING_URL map_add load_const author load_const wbond map_add load_const author_email load_const will@wbond.net map_add load_const license load_const MIT map_add load_const classifiers build_list load_const list_extend map_add load_const keywords load_const STRING_LEN_S_ENT_HIGH map_add load_const STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH build_list map_add load_const packages push_null load_name find_packages load_const tests* load_const dev* build_list kw_names exclude call map_add load_const package_data load_name package_data map_add load_const tests_require load_name tests_require map_add load_const test_suite load_name test_suite map_add load_const cmdclass load_name CleanCommand load_name EggInfoCommand load_const build_const_key_map map_add call_function_ex pop_top return_const None push_exc_info with_except_start pop_jump_if_true TO_NUMBER reraise pop_top pop_except pop_top pop_top jump_backward TO_NUMBER copy pop_except reraise
    hash: 4aaeeaeb51d8f306c74e14fd290609df11caa5894c0b4e4a97f12cc3dcb8914c
sources:
  .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/setup.py: aW1wb3J0IGNvZGVjcwppbXBvcnQgb3MKaW1wb3J0IHNodXRpbAppbXBvcnQgc3lzCmltcG9ydCB3YXJuaW5ncwoKaW1wb3J0IHNldHVwdG9vbHMKZnJvbSBzZXR1cHRvb2xzIGltcG9ydCBmaW5kX3BhY2thZ2VzLCBzZXR1cCwgQ29tbWFuZApmcm9tIHNldHVwdG9vbHMuY29tbWFuZC5lZ2dfaW5mbyBpbXBvcnQgZWdnX2luZm8KCgpQQUNLQUdFX05BTUUgPSAncHljcnlwdG9lbnYnClBBQ0tBR0VfVkVSU0lPTiA9ICcxLjAuNycKUEFDS0FHRV9ST09UID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCgoKIyBzZXR1cHRvb2xzIDM4LjYuMCBhbmQgbmV3ZXIga25vdyBhYm91dCBsb25nX2Rlc2NyaXB0aW9uX2NvbnRlbnRfdHlwZSwgYnV0CiMgZGlzdHV0aWxzIHN0aWxsIGNvbXBsYWlucyBhYm91dCBpdCwgc28gc2lsZW5jZSB0aGUgd2FybmluZwpzdiA9IHNldHVwdG9vbHMuX192ZXJzaW9uX18Kc3ZpID0gdHVwbGUoaW50KG8pIGlmIG8uaXNkaWdpdCgpIGVsc2UgbyBmb3IgbyBpbiBzdi5zcGxpdCgnLicpKQppZiBzdmkgPj0gKDM4LCA2KToKICAgIHdhcm5pbmdzLmZpbHRlcndhcm5pbmdzKAogICAgICAgICdpZ25vcmUnLAogICAgICAgICJVbmtub3duIGRpc3RyaWJ1dGlvbiBvcHRpb246ICdsb25nX2Rlc2NyaXB0aW9uX2NvbnRlbnRfdHlwZSciLAogICAgICAgIG1vZHVsZT0nZGlzdHV0aWxzLmRpc3QnCiAgICApCgoKIyBUcnkgdG8gbG9hZCB0aGUgdGVzdHMgZmlyc3QgZnJvbSB0aGUgc291cmNlIHJlcG9zaXRvcnkgbGF5b3V0LiBJZiB0aGF0CiMgZG9lc24ndCB3b3JrLCB3ZSBhc3N1bWUgdGhpcyBmaWxlIGlzIGluIHRoZSByZWxlYXNlIHBhY2thZ2UsIGFuZCB0aGUgdGVzdHMKIyBhcmUgcGFydCBvZiB0aGUgcGFja2FnZSB7UEFDS0FHRV9OQU1FfV90ZXN0cy4KaWYgb3MucGF0aC5leGlzdHMob3MucGF0aC5qb2luKFBBQ0tBR0VfUk9PVCwgJ3Rlc3RzJykpOgogICAgdGVzdHNfcmVxdWlyZSA9IFtdCiAgICB0ZXN0X3N1aXRlID0gJ3Rlc3RzLm1ha2Vfc3VpdGUnCmVsc2U6CiAgICB0ZXN0c19yZXF1aXJlID0gWyclc190ZXN0cycgJSBQQUNLQUdFX05BTUVdCiAgICB0ZXN0X3N1aXRlID0gJyVzX3Rlc3RzLm1ha2Vfc3VpdGUnICUgUEFDS0FHRV9OQU1FCgoKIyBUaGlzIGFsbG93cyB1cyB0byBzZW5kIHRoZSBMSUNFTlNFIGFuZCBkb2NzIHdoZW4gY3JlYXRpbmcgYSBzZGlzdC4gV2hlZWxzCiMgYXV0b21hdGljYWxseSBpbmNsdWRlIHRoZSBMSUNFTlNFLCBhbmQgZG9uJ3QgbmVlZCB0aGUgZG9jcy4gRm9yIHRoZXNlCiMgdG8gYmUgaW5jbHVkZWQsIHRoZSBjb21tYW5kIG11c3QgYmUgInB5dGhvbiBzZXR1cC5weSBzZGlzdCIuCnBhY2thZ2VfZGF0YSA9IHt9CmlmIHN5cy5hcmd2WzE6XSA9PSBbJ3NkaXN0J10gb3Igc29ydGVkKHN5cy5hcmd2WzE6XSkgPT0gWyctcScsICdzZGlzdCddOgogICAgcGFja2FnZV9kYXRhW1BBQ0tBR0VfTkFNRV0gPSBbCiAgICAgICAgJy4uL0xJQ0VOU0UnLAogICAgICAgICcuLi8qLm1kJywKICAgICAgICAnLi4vZG9jcy8qLm1kJywKICAgIF0KCgojIEVuc3VyZXMgYSBjb3B5IG9mIHRoZSBMSUNFTlNFIGlzIGluY2x1ZGVkIHdpdGggdGhlIGVnZy1pbmZvIGZvcgojIGluc3RhbGwgYW5kIGJkaXN0X2VnZyBjb21tYW5kcwpjbGFzcyBFZ2dJbmZvQ29tbWFuZChlZ2dfaW5mbyk6CiAgICBkZWYgcnVuKHNlbGYpOgogICAgICAgIGVnZ19pbmZvX3BhdGggPSBvcy5wYXRoLmpvaW4oCiAgICAgICAgICAgIFBBQ0tBR0VfUk9PVCwKICAgICAgICAgICAgJyVzLmVnZy1pbmZvJyAlIFBBQ0tBR0VfTkFNRQogICAgICAgICkKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoZWdnX2luZm9fcGF0aCk6CiAgICAgICAgICAgIG9zLm1rZGlyKGVnZ19pbmZvX3BhdGgpCiAgICAgICAgc2h1dGlsLmNvcHkyKAogICAgICAgICAgICBvcy5wYXRoLmpvaW4oUEFDS0FHRV9ST09ULCAnTElDRU5TRScpLAogICAgICAgICAgICBvcy5wYXRoLmpvaW4oZWdnX2luZm9fcGF0aCwgJ0xJQ0VOU0UnKQogICAgICAgICkKICAgICAgICBlZ2dfaW5mby5ydW4oc2VsZikKCgpjbGFzcyBDbGVhbkNvbW1hbmQoQ29tbWFuZCk6CiAgICB1c2VyX29wdGlvbnMgPSBbCiAgICAgICAgKCdhbGwnLCAnYScsICcoQ29tcGF0aWJpbGl0eSB3aXRoIG9yaWdpbmFsIGNsZWFuIGNvbW1hbmQpJyksCiAgICBdCgogICAgZGVmIGluaXRpYWxpemVfb3B0aW9ucyhzZWxmKToKICAgICAgICBzZWxmLmFsbCA9IEZhbHNlCgogICAgZGVmIGZpbmFsaXplX29wdGlvbnMoc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGRlZiBydW4oc2VsZik6CiAgICAgICAgc3ViX2ZvbGRlcnMgPSBbJ2J1aWxkJywgJ3RlbXAnLCAnJXMuZWdnLWluZm8nICUgUEFDS0FHRV9OQU1FXQogICAgICAgIGlmIHNlbGYuYWxsOgogICAgICAgICAgICBzdWJfZm9sZGVycy5hcHBlbmQoJ2Rpc3QnKQogICAgICAgIGZvciBzdWJfZm9sZGVyIGluIHN1Yl9mb2xkZXJzOgogICAgICAgICAgICBmdWxsX3BhdGggPSBvcy5wYXRoLmpvaW4oUEFDS0FHRV9ST09ULCBzdWJfZm9sZGVyKQogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhmdWxsX3BhdGgpOgogICAgICAgICAgICAgICAgc2h1dGlsLnJtdHJlZShmdWxsX3BhdGgpCiAgICAgICAgZm9yIHJvb3QsIGRpcnMsIGZpbGVzIGluIG9zLndhbGsob3MucGF0aC5qb2luKFBBQ0tBR0VfUk9PVCwgUEFDS0FHRV9OQU1FKSk6CiAgICAgICAgICAgIGZvciBmaWxlbmFtZSBpbiBmaWxlczoKICAgICAgICAgICAgICAgIGlmIGZpbGVuYW1lWy00Ol0gPT0gJy5weWMnOgogICAgICAgICAgICAgICAgICAgIG9zLnVubGluayhvcy5wYXRoLmpvaW4ocm9vdCwgZmlsZW5hbWUpKQogICAgICAgICAgICBmb3IgZGlybmFtZSBpbiBsaXN0KGRpcnMpOgogICAgICAgICAgICAgICAgaWYgZGlybmFtZSA9PSAnX19weWNhY2hlX18nOgogICAgICAgICAgICAgICAgICAgIHNodXRpbC5ybXRyZWUob3MucGF0aC5qb2luKHJvb3QsIGRpcm5hbWUpKQoKCnJlYWRtZSA9ICcnCndpdGggY29kZWNzLm9wZW4ob3MucGF0aC5qb2luKFBBQ0tBR0VfUk9PVCwgJ3JlYWRtZS5tZCcpLCAncicsICd1dGYtOCcpIGFzIGY6CiAgICByZWFkbWUgPSBmLnJlYWQoKQoKCnNldHVwKAogICAgbmFtZT1QQUNLQUdFX05BTUUsCiAgICB2ZXJzaW9uPVBBQ0tBR0VfVkVSU0lPTiwKCiAgICBkZXNjcmlwdGlvbj0oCiAgICAgICAgJ1RMUyAoU1NMKSBzb2NrZXRzLCBrZXkgZ2VuZXJhdGlvbiwgZW5jcnlwdGlvbiwgZGVjcnlwdGlvbiwgc2lnbmluZywgJwogICAgICAgICd2ZXJpZmljYXRpb24gYW5kIEtERnMgdXNpbmcgdGhlIE9TIGNyeXB0byBsaWJyYXJpZXMuIERvZXMgbm90IHJlcXVpcmUgJwogICAgICAgICdhIGNvbXBpbGVyLCBhbmQgcmVsaWVzIG9uIHRoZSBPUyBmb3IgcGF0Y2hpbmcuIFdvcmtzIG9uIFdpbmRvd3MsIE9TIFggJwogICAgICAgICdhbmQgTGludXgvQlNELicKICAgICksCiAgICBsb25nX2Rlc2NyaXB0aW9uPXJlYWRtZSwKICAgIGxvbmdfZGVzY3JpcHRpb25fY29udGVudF90eXBlPSd0ZXh0L21hcmtkb3duJywKCiAgICB1cmw9J2h0dHBzOi8vZ2l0aHViLmNvbS93Ym9uZC9weWNyeXB0b2VudicsCgogICAgYXV0aG9yPSd3Ym9uZCcsCiAgICBhdXRob3JfZW1haWw9J3dpbGxAd2JvbmQubmV0JywKCiAgICBsaWNlbnNlPSdNSVQnLAoKICAgIGNsYXNzaWZpZXJzPVsKICAgICAgICAnRGV2ZWxvcG1lbnQgU3RhdHVzIDo6IDUgLSBQcm9kdWN0aW9uL1N0YWJsZScsCgogICAgICAgICdJbnRlbmRlZCBBdWRpZW5jZSA6OiBEZXZlbG9wZXJzJywKCiAgICAgICAgJ0xpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlJywKCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyJywKICAgICAgICAnUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDIuNicsCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyLjcnLAogICAgICAgICdQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMycsCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjInLAogICAgICAgICdQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMy4zJywKICAgICAgICAnUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDMuNCcsCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjUnLAogICAgICAgICdQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMy42JywKICAgICAgICAnUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDMuNycsCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgnLAogICAgICAgICdQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMy45JywKICAgICAgICAnUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDMuMTAnLAogICAgICAgICdQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMy4xMScsCiAgICAgICAgJ1Byb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiBJbXBsZW1lbnRhdGlvbiA6OiBQeVB5JywKCiAgICAgICAgJ1RvcGljIDo6IFNlY3VyaXR5IDo6IENyeXB0b2dyYXBoeScsCiAgICBdLAoKICAgIGtleXdvcmRzPSdjcnlwdG8gcGtpIHRscyBzc2wgeDUwOSBjZXJ0aWZpY2F0ZSBlbmNyeXB0IGRlY3J5cHQgc2lnbiB2ZXJpZnkgcnNhIGRzYSBlYyBkaCcsCgogICAgaW5zdGFsbF9yZXF1aXJlcz1bJ2FzbjFjcnlwdG8+PTEuNS4xJ10sCgogICAgcGFja2FnZXM9ZmluZF9wYWNrYWdlcyhleGNsdWRlPVsndGVzdHMqJywgJ2RldionXSksCiAgICBwYWNrYWdlX2RhdGE9cGFja2FnZV9kYXRhLAoKICAgIHRlc3RzX3JlcXVpcmU9dGVzdHNfcmVxdWlyZSwKICAgIHRlc3Rfc3VpdGU9dGVzdF9zdWl0ZSwKCiAgICBjbWRjbGFzcz17CiAgICAgICAgJ2NsZWFuJzogQ2xlYW5Db21tYW5kLAogICAgICAgICdlZ2dfaW5mbyc6IEVnZ0luZm9Db21tYW5kLAogICAgfQopCg==
