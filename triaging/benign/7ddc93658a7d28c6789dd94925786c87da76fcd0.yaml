statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/colored-upgrade/0.0.1/colored-upgrade-0.0.1/colored-upgrade-0.0.1/colored/cprint.py
  contents:
  - name: <module>
    score: 0.0
    code: |-
      #!/usr/bin/env python
      # -*- coding: utf-8 -*-

      from __future__ import annotations

      from .colored import Colored
      from .colored import fore_rgb as foreground_rgb
      from .colored import back_rgb as background_rgb


      def cprint(text: str,
                 fore_256: int | str = None,
                 back_256: int | str = None,
                 fore_rgb: tuple = None,
                 back_rgb: tuple = None,
                 formatting: int | str = '',
                 line_color: int | str = '',
                 reset=True,
                 **kwargs) -> None:
          """ Looks like a patch to a built-in python print() function that allows
          to pass colored text and style, to this function.

          Args:
              text: String type text.
              fore_256: Sets the foreground color.
              back_256: Sets the background color.
              fore_rgb: Sets the foreground color.
              back_rgb: Sets the background color.
              formatting: Sets the style of the text.
              line_color: Sets the underline color.
              reset: Reset the formatting style after print, default is True.
          """
          fore_color: str = ''
          back_color: str = ''
          styling: str = Colored(formatting).attribute(line_color)
          terminator: str = Colored('reset').attribute() if reset else ''

          if fore_256:
              fore_color: str = Colored(fore_256).foreground()
          elif fore_rgb:
              fR, fG, fB = fore_rgb
              fore_color: str = foreground_rgb(fR, fG, fB)

          if back_256:
              back_color: str = Colored(back_256).background()
          elif back_rgb:
              bR, bG, bB = back_rgb
              back_color: str = background_rgb(bR, bG, bB)

          print(f'{styling}{back_color}{fore_color}{text}{terminator}', **kwargs)
    tokens: resume load_const INTEGER load_const import_name __future__ import_from annotations store_name annotations pop_top load_const INTEGER load_const import_name colored import_from Colored store_name Colored pop_top load_const INTEGER load_const import_name colored import_from fore_rgb store_name foreground_rgb pop_top load_const INTEGER load_const import_name colored import_from back_rgb store_name background_rgb pop_top nop nop nop nop nop nop nop load_const nop nop nop nop nop nop nop nop nop nop nop nop nop load_const load_const OBJECT make_function defaults, annotations store_name cprint return_const None
    hash: 172b2ffd300f05676dfb4a8079795177e12a47d5b9dafcde86df1ba900594e08
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/colored-upgrade/0.0.1/colored-upgrade-0.0.1/colored-upgrade-0.0.1/colored/cprint.py
  : IyEvdXNyL2Jpbi9lbnYgcHl0aG9uCiMgLSotIGNvZGluZzogdXRmLTggLSotCgpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgpmcm9tIC5jb2xvcmVkIGltcG9ydCBDb2xvcmVkCmZyb20gLmNvbG9yZWQgaW1wb3J0IGZvcmVfcmdiIGFzIGZvcmVncm91bmRfcmdiCmZyb20gLmNvbG9yZWQgaW1wb3J0IGJhY2tfcmdiIGFzIGJhY2tncm91bmRfcmdiCgoKZGVmIGNwcmludCh0ZXh0OiBzdHIsCiAgICAgICAgICAgZm9yZV8yNTY6IGludCB8IHN0ciA9IE5vbmUsCiAgICAgICAgICAgYmFja18yNTY6IGludCB8IHN0ciA9IE5vbmUsCiAgICAgICAgICAgZm9yZV9yZ2I6IHR1cGxlID0gTm9uZSwKICAgICAgICAgICBiYWNrX3JnYjogdHVwbGUgPSBOb25lLAogICAgICAgICAgIGZvcm1hdHRpbmc6IGludCB8IHN0ciA9ICcnLAogICAgICAgICAgIGxpbmVfY29sb3I6IGludCB8IHN0ciA9ICcnLAogICAgICAgICAgIHJlc2V0PVRydWUsCiAgICAgICAgICAgKiprd2FyZ3MpIC0+IE5vbmU6CiAgICAiIiIgTG9va3MgbGlrZSBhIHBhdGNoIHRvIGEgYnVpbHQtaW4gcHl0aG9uIHByaW50KCkgZnVuY3Rpb24gdGhhdCBhbGxvd3MKICAgIHRvIHBhc3MgY29sb3JlZCB0ZXh0IGFuZCBzdHlsZSwgdG8gdGhpcyBmdW5jdGlvbi4KCiAgICBBcmdzOgogICAgICAgIHRleHQ6IFN0cmluZyB0eXBlIHRleHQuCiAgICAgICAgZm9yZV8yNTY6IFNldHMgdGhlIGZvcmVncm91bmQgY29sb3IuCiAgICAgICAgYmFja18yNTY6IFNldHMgdGhlIGJhY2tncm91bmQgY29sb3IuCiAgICAgICAgZm9yZV9yZ2I6IFNldHMgdGhlIGZvcmVncm91bmQgY29sb3IuCiAgICAgICAgYmFja19yZ2I6IFNldHMgdGhlIGJhY2tncm91bmQgY29sb3IuCiAgICAgICAgZm9ybWF0dGluZzogU2V0cyB0aGUgc3R5bGUgb2YgdGhlIHRleHQuCiAgICAgICAgbGluZV9jb2xvcjogU2V0cyB0aGUgdW5kZXJsaW5lIGNvbG9yLgogICAgICAgIHJlc2V0OiBSZXNldCB0aGUgZm9ybWF0dGluZyBzdHlsZSBhZnRlciBwcmludCwgZGVmYXVsdCBpcyBUcnVlLgogICAgIiIiCiAgICBmb3JlX2NvbG9yOiBzdHIgPSAnJwogICAgYmFja19jb2xvcjogc3RyID0gJycKICAgIHN0eWxpbmc6IHN0ciA9IENvbG9yZWQoZm9ybWF0dGluZykuYXR0cmlidXRlKGxpbmVfY29sb3IpCiAgICB0ZXJtaW5hdG9yOiBzdHIgPSBDb2xvcmVkKCdyZXNldCcpLmF0dHJpYnV0ZSgpIGlmIHJlc2V0IGVsc2UgJycKCiAgICBpZiBmb3JlXzI1NjoKICAgICAgICBmb3JlX2NvbG9yOiBzdHIgPSBDb2xvcmVkKGZvcmVfMjU2KS5mb3JlZ3JvdW5kKCkKICAgIGVsaWYgZm9yZV9yZ2I6CiAgICAgICAgZlIsIGZHLCBmQiA9IGZvcmVfcmdiCiAgICAgICAgZm9yZV9jb2xvcjogc3RyID0gZm9yZWdyb3VuZF9yZ2IoZlIsIGZHLCBmQikKCiAgICBpZiBiYWNrXzI1NjoKICAgICAgICBiYWNrX2NvbG9yOiBzdHIgPSBDb2xvcmVkKGJhY2tfMjU2KS5iYWNrZ3JvdW5kKCkKICAgIGVsaWYgYmFja19yZ2I6CiAgICAgICAgYlIsIGJHLCBiQiA9IGJhY2tfcmdiCiAgICAgICAgYmFja19jb2xvcjogc3RyID0gYmFja2dyb3VuZF9yZ2IoYlIsIGJHLCBiQikKCiAgICBwcmludChmJ3tzdHlsaW5nfXtiYWNrX2NvbG9yfXtmb3JlX2NvbG9yfXt0ZXh0fXt0ZXJtaW5hdG9yfScsICoqa3dhcmdzKQo=
