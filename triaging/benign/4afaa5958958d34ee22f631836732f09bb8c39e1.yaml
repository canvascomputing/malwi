statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/colour.py
  contents:
  - name: Colour.__eq__
    score: 0.0
    code: |-
      def __eq__(self, other):
              return isinstance(other, Colour) and self.value == other.value
    tokens: resume load_global isinstance load_fast other load_global Colour call copy pop_jump_if_false TO_NUMBER pop_top load_fast self load_attr value load_fast other load_attr value compare_op == return_value
    hash: fc4fcd35d9df227071eedd231f8ff47eee96f5e9318786f7b5ef03135f572f73
sources:
  .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/colour.py: 
