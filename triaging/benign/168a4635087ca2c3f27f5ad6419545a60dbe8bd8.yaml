statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/enums.py
  contents:
  - name: AuditLogAction.category
    score: 0.0
    code: |-
      @property
          def category(self):
              lookup = {
                  AuditLogAction.guild_update:        AuditLogActionCategory.update,
                  AuditLogAction.channel_create:      AuditLogActionCategory.create,
                  AuditLogAction.channel_update:      AuditLogActionCategory.update,
                  AuditLogAction.channel_delete:      AuditLogActionCategory.delete,
                  AuditLogAction.overwrite_create:    AuditLogActionCategory.create,
                  AuditLogAction.overwrite_update:    AuditLogActionCategory.update,
                  AuditLogAction.overwrite_delete:    AuditLogActionCategory.delete,
                  AuditLogAction.kick:                None,
                  AuditLogAction.member_prune:        None,
                  AuditLogAction.ban:                 None,
                  AuditLogAction.unban:               None,
                  AuditLogAction.member_update:       AuditLogActionCategory.update,
                  AuditLogAction.member_role_update:  AuditLogActionCategory.update,
                  AuditLogAction.member_move:         None,
                  AuditLogAction.member_disconnect:   None,
                  AuditLogAction.bot_add:             None,
                  AuditLogAction.role_create:         AuditLogActionCategory.create,
                  AuditLogAction.role_update:         AuditLogActionCategory.update,
                  AuditLogAction.role_delete:         AuditLogActionCategory.delete,
                  AuditLogAction.invite_create:       AuditLogActionCategory.create,
                  AuditLogAction.invite_update:       AuditLogActionCategory.update,
                  AuditLogAction.invite_delete:       AuditLogActionCategory.delete,
                  AuditLogAction.webhook_create:      AuditLogActionCategory.create,
                  AuditLogAction.webhook_update:      AuditLogActionCategory.update,
                  AuditLogAction.webhook_delete:      AuditLogActionCategory.delete,
                  AuditLogAction.emoji_create:        AuditLogActionCategory.create,
                  AuditLogAction.emoji_update:        AuditLogActionCategory.update,
                  AuditLogAction.emoji_delete:        AuditLogActionCategory.delete,
                  AuditLogAction.message_delete:      AuditLogActionCategory.delete,
                  AuditLogAction.message_bulk_delete: AuditLogActionCategory.delete,
                  AuditLogAction.message_pin:         None,
                  AuditLogAction.message_unpin:       None,
                  AuditLogAction.integration_create:  AuditLogActionCategory.create,
                  AuditLogAction.integration_update:  AuditLogActionCategory.update,
                  AuditLogAction.integration_delete:  AuditLogActionCategory.delete,
              }
              return lookup[self]
    tokens: resume build_map load_global AuditLogAction load_attr guild_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr channel_create load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr channel_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr channel_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr kick load_const map_add load_global AuditLogAction load_attr member_prune load_const map_add load_global AuditLogAction load_attr ban load_const map_add load_global AuditLogAction load_attr unban load_const map_add load_global AuditLogAction load_attr member_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr member_move load_const map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_const map_add load_global AuditLogAction load_attr bot_add load_const map_add load_global AuditLogAction load_attr role_create load_global STRING_LEN_S_ENT_HIGH load_attr create map_add build_map load_global AuditLogAction load_attr role_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr role_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr invite_create load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr invite_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr invite_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr webhook_create load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr webhook_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr webhook_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr emoji_create load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr emoji_update load_global STRING_LEN_S_ENT_HIGH load_attr update map_add load_global AuditLogAction load_attr emoji_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr message_delete load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr delete map_add load_global AuditLogAction load_attr message_pin load_const map_add load_global AuditLogAction load_attr message_unpin load_const map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr create map_add load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr update map_add dict_update load_global AuditLogAction load_attr STRING_LEN_S_ENT_HIGH load_global STRING_LEN_S_ENT_HIGH load_attr delete build_map dict_update store_fast lookup load_fast lookup load_fast self binary_subscr return_value
    hash: d16a806cd9eec4d5a0aa9949e190cad4040b1474a22edaea7821e36cbd17d23a
sources:
  .repo_cache/malicious_repos/pypi_malregistry/discord-py-v13/1.3/discord_py_v13-1.3-py3-none-any/discord-py-v13/enums.py: 
