statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/awscl/1.27.67/awscl-1.27.67/awscl-1.27.67/awscli/customizations/generatecliskeleton.py
  contents:
  - name: <module>
    score: 0.0
    code: |-
      # Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
      #
      # Licensed under the Apache License, Version 2.0 (the "License"). You
      # may not use this file except in compliance with the License. A copy of
      # the License is located at
      #
      #     http://aws.amazon.com/apache2.0/
      #
      # or in the "license" file accompanying this file. This file is
      # distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
      # ANY KIND, either express or implied. See the License for the specific
      # language governing permissions and limitations under the License.
      import json
      import sys

      from botocore import xform_name
      from botocore.stub import Stubber
      from botocore.utils import ArgumentGenerator

      from awscli.clidriver import CLIOperationCaller
      from awscli.customizations.arguments import OverrideRequiredArgsArgument
      from awscli.utils import json_encoder


      def register_generate_cli_skeleton(cli):
          cli.register('building-argument-table', add_generate_skeleton)
    tokens: resume load_const INTEGER load_const import_name json store_name json load_const INTEGER load_const import_name sys store_name sys load_const INTEGER load_const import_name botocore import_from xform_name store_name xform_name pop_top load_const INTEGER load_const import_name botocore.stub import_from Stubber store_name Stubber pop_top load_const INTEGER load_const import_name botocore.utils import_from STRING_LEN_S_ENT_HIGH store_name STRING_LEN_S_ENT_HIGH pop_top load_const INTEGER load_const import_name STRING_LEN_S_ENT_HIGH import_from STRING_LEN_S_ENT_HIGH store_name STRING_LEN_S_ENT_HIGH pop_top load_const INTEGER load_const import_name STRING_LEN_S_ENT_HIGH import_from STRING_BASE64_LEN_S_ENT_HIGH store_name STRING_BASE64_LEN_S_ENT_HIGH pop_top load_const INTEGER load_const import_name awscli.utils import_from json_encoder store_name json_encoder pop_top load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH push_null load_build_class load_const OBJECT make_function load_const STRING_LEN_S_ENT_HIGH load_name STRING_BASE64_LEN_S_ENT_HIGH call store_name STRING_LEN_S_ENT_HIGH push_null load_build_class load_const OBJECT make_function load_const STRING_LEN_S_ENT_HIGH load_name STRING_LEN_S_ENT_HIGH call store_name STRING_LEN_S_ENT_HIGH return_const None
    hash: 8de0976a3b4a262eb325abd6d3eadc0a274f90ac37a15a61aeef341a0e9964da
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/awscl/1.27.67/awscl-1.27.67/awscl-1.27.67/awscli/customizations/generatecliskeleton.py
  : IyBDb3B5cmlnaHQgMjAxNCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLgojCiMgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIikuIFlvdQojIG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YKIyB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0CiMKIyAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC8KIwojIG9yIGluIHRoZSAibGljZW5zZSIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMKIyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRgojIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYwojIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCmltcG9ydCBqc29uCmltcG9ydCBzeXMKCmZyb20gYm90b2NvcmUgaW1wb3J0IHhmb3JtX25hbWUKZnJvbSBib3RvY29yZS5zdHViIGltcG9ydCBTdHViYmVyCmZyb20gYm90b2NvcmUudXRpbHMgaW1wb3J0IEFyZ3VtZW50R2VuZXJhdG9yCgpmcm9tIGF3c2NsaS5jbGlkcml2ZXIgaW1wb3J0IENMSU9wZXJhdGlvbkNhbGxlcgpmcm9tIGF3c2NsaS5jdXN0b21pemF0aW9ucy5hcmd1bWVudHMgaW1wb3J0IE92ZXJyaWRlUmVxdWlyZWRBcmdzQXJndW1lbnQKZnJvbSBhd3NjbGkudXRpbHMgaW1wb3J0IGpzb25fZW5jb2RlcgoKCmRlZiByZWdpc3Rlcl9nZW5lcmF0ZV9jbGlfc2tlbGV0b24oY2xpKToKICAgIGNsaS5yZWdpc3RlcignYnVpbGRpbmctYXJndW1lbnQtdGFibGUnLCBhZGRfZ2VuZXJhdGVfc2tlbGV0b24pCgoKZGVmIGFkZF9nZW5lcmF0ZV9za2VsZXRvbihzZXNzaW9uLCBvcGVyYXRpb25fbW9kZWwsIGFyZ3VtZW50X3RhYmxlLCAqKmt3YXJncyk6CiAgICAjIFRoaXMgYXJndW1lbnQgY2Fubm90IHN1cHBvcnQgb3BlcmF0aW9ucyB3aXRoIHN0cmVhbWluZyBvdXRwdXQgd2hpY2gKICAgICMgaXMgZGVzaWduYXRlZCBieSB0aGUgYXJndW1lbnQgbmFtZSBgb3V0ZmlsZWAuCiAgICBpZiAnb3V0ZmlsZScgbm90IGluIGFyZ3VtZW50X3RhYmxlOgogICAgICAgIGdlbmVyYXRlX2NsaV9za2VsZXRvbl9hcmd1bWVudCA9IEdlbmVyYXRlQ2xpU2tlbGV0b25Bcmd1bWVudCgKICAgICAgICAgICAgc2Vzc2lvbiwgb3BlcmF0aW9uX21vZGVsKQogICAgICAgIGdlbmVyYXRlX2NsaV9za2VsZXRvbl9hcmd1bWVudC5hZGRfdG9fYXJnX3RhYmxlKGFyZ3VtZW50X3RhYmxlKQoKCmNsYXNzIEdlbmVyYXRlQ2xpU2tlbGV0b25Bcmd1bWVudChPdmVycmlkZVJlcXVpcmVkQXJnc0FyZ3VtZW50KToKICAgICIiIlRoaXMgYXJndW1lbnQgd3JpdGVzIGEgZ2VuZXJhdGVkIEpTT04gc2tlbGV0b24gdG8gc3Rkb3V0CgogICAgVGhlIGFyZ3VtZW50LCBpZiBwcmVzZW50IGluIHRoZSBjb21tYW5kIGxpbmUsIHdpbGwgcHJldmVudCB0aGUgaW50ZW5kZWQKICAgIGNvbW1hbmQgZnJvbSB0YWtpbmcgcGxhY2UuIEluc3RlYWQsIGl0IHdpbGwgZ2VuZXJhdGUgYSBKU09OIHNrZWxldG9uIGFuZAogICAgcHJpbnQgaXQgdG8gc3RhbmRhcmQgb3V0cHV0LgogICAgIiIiCiAgICBBUkdfREFUQSA9IHsKICAgICAgICAnbmFtZSc6ICdnZW5lcmF0ZS1jbGktc2tlbGV0b24nLAogICAgICAgICdoZWxwX3RleHQnOiAoCiAgICAgICAgICAgICdQcmludHMgYSBKU09OIHNrZWxldG9uIHRvIHN0YW5kYXJkIG91dHB1dCB3aXRob3V0IHNlbmRpbmcgJwogICAgICAgICAgICAnYW4gQVBJIHJlcXVlc3QuIElmIHByb3ZpZGVkIHdpdGggbm8gdmFsdWUgb3IgdGhlIHZhbHVlICcKICAgICAgICAgICAgJ2BgaW5wdXRgYCwgcHJpbnRzIGEgc2FtcGxlIGlucHV0IEpTT04gdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiAnCiAgICAgICAgICAgICdhcmd1bWVudCBmb3IgYGAtLWNsaS1pbnB1dC1qc29uYGAuIElmIHByb3ZpZGVkIHdpdGggdGhlIHZhbHVlICcKICAgICAgICAgICAgJ2Bgb3V0cHV0YGAsIGl0IHZhbGlkYXRlcyB0aGUgY29tbWFuZCBpbnB1dHMgYW5kIHJldHVybnMgYSAnCiAgICAgICAgICAgICdzYW1wbGUgb3V0cHV0IEpTT04gZm9yIHRoYXQgY29tbWFuZC4nCiAgICAgICAgKSwKICAgICAgICAnbmFyZ3MnOiAnPycsCiAgICAgICAgJ2NvbnN0JzogJ2lucHV0JywKICAgICAgICAnY2hvaWNlcyc6IFsnaW5wdXQnLCAnb3V0cHV0J10sCiAgICB9CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNlc3Npb24sIG9wZXJhdGlvbl9tb2RlbCk6CiAgICAgICAgc3VwZXIoR2VuZXJhdGVDbGlTa2VsZXRvbkFyZ3VtZW50LCBzZWxmKS5fX2luaXRfXyhzZXNzaW9uKQogICAgICAgIHNlbGYuX29wZXJhdGlvbl9tb2RlbCA9IG9wZXJhdGlvbl9tb2RlbAoKICAgIGRlZiBfcmVnaXN0ZXJfYXJndW1lbnRfYWN0aW9uKHNlbGYpOgogICAgICAgIHNlbGYuX3Nlc3Npb24ucmVnaXN0ZXIoCiAgICAgICAgICAgICdjYWxsaW5nLWNvbW1hbmQuKicsIHNlbGYuZ2VuZXJhdGVfanNvbl9za2VsZXRvbikKICAgICAgICBzdXBlcihHZW5lcmF0ZUNsaVNrZWxldG9uQXJndW1lbnQsIHNlbGYpLl9yZWdpc3Rlcl9hcmd1bWVudF9hY3Rpb24oKQoKICAgIGRlZiBvdmVycmlkZV9yZXF1aXJlZF9hcmdzKHNlbGYsIGFyZ3VtZW50X3RhYmxlLCBhcmdzLCAqKmt3YXJncyk6CiAgICAgICAgYXJnX25hbWUgPSAnLS0nICsgc2VsZi5uYW1lCiAgICAgICAgaWYgYXJnX25hbWUgaW4gYXJnczoKICAgICAgICAgICAgYXJnX2xvY2F0aW9uID0gYXJncy5pbmRleChhcmdfbmFtZSkKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgIyBJZiB0aGUgdmFsdWUgb2YgLS1nZW5lcmF0ZS1jbGktc2tlbGV0b24gaXMgYGBvdXRwdXRgYCwKICAgICAgICAgICAgICAgICMgZG8gbm90IGZvcmNlIHJlcXVpcmVkIGFyZ3VtZW50cyB0byBiZSBvcHRpb25hbCBhcwogICAgICAgICAgICAgICAgIyBgYC0tZ2VuZXJhdGUtY2xpLXNrZWxldG9uIG91dHB1dGBgIHZhbGlkYXRlcyBjb21tYW5kcwogICAgICAgICAgICAgICAgIyBhcyB3ZWxsIGFzIHByaW50IG91dCB0aGUgc2FtcGxlIG91dHB1dC4KICAgICAgICAgICAgICAgIGlmIGFyZ3NbYXJnX2xvY2F0aW9uICsgMV0gPT0gJ291dHB1dCc6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOgogICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICBzdXBlcihHZW5lcmF0ZUNsaVNrZWxldG9uQXJndW1lbnQsIHNlbGYpLm92ZXJyaWRlX3JlcXVpcmVkX2FyZ3MoCiAgICAgICAgICAgICAgICBhcmd1bWVudF90YWJsZSwgYXJncywgKiprd2FyZ3MpCgogICAgZGVmIGdlbmVyYXRlX2pzb25fc2tlbGV0b24oc2VsZiwgY2FsbF9wYXJhbWV0ZXJzLCBwYXJzZWRfYXJncywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZF9nbG9iYWxzLCAqKmt3YXJncyk6CiAgICAgICAgaWYgZ2V0YXR0cihwYXJzZWRfYXJncywgJ2dlbmVyYXRlX2NsaV9za2VsZXRvbicsIE5vbmUpOgogICAgICAgICAgICBmb3Jfb3V0cHV0ID0gcGFyc2VkX2FyZ3MuZ2VuZXJhdGVfY2xpX3NrZWxldG9uID09ICdvdXRwdXQnCiAgICAgICAgICAgIG9wZXJhdGlvbl9tb2RlbCA9IHNlbGYuX29wZXJhdGlvbl9tb2RlbAoKICAgICAgICAgICAgaWYgZm9yX291dHB1dDoKICAgICAgICAgICAgICAgIHNlcnZpY2VfbmFtZSA9IG9wZXJhdGlvbl9tb2RlbC5zZXJ2aWNlX21vZGVsLnNlcnZpY2VfbmFtZQogICAgICAgICAgICAgICAgb3BlcmF0aW9uX25hbWUgPSBvcGVyYXRpb25fbW9kZWwubmFtZQogICAgICAgICAgICAgICAgIyBUT0RPOiBJdCB3b3VsZCBiZSBiZXR0ZXIgdG8gYWJzdHJhY3QgdGhpcyBsb2dpYyBpbnRvCiAgICAgICAgICAgICAgICAjIGNsYXNzZXMgZm9yIGJvdGggdGhlIGlucHV0IGFuZCBvdXRwdXQgb3B0aW9uIHN1Y2ggdGhhdAogICAgICAgICAgICAgICAgIyBhIHNpbWlsYXIgc2V0IG9mIGlucHV0cyBhcmUgdGFrZW4gaW4gYW5kIG91dHB1dAogICAgICAgICAgICAgICAgIyBzaW1pbGFyIGZ1bmN0aW9uYWxpdHkuCiAgICAgICAgICAgICAgICByZXR1cm4gU3R1YmJlZENMSU9wZXJhdGlvbkNhbGxlcihzZWxmLl9zZXNzaW9uKS5pbnZva2UoCiAgICAgICAgICAgICAgICAgICAgc2VydmljZV9uYW1lLCBvcGVyYXRpb25fbmFtZSwgY2FsbF9wYXJhbWV0ZXJzLAogICAgICAgICAgICAgICAgICAgIHBhcnNlZF9nbG9iYWxzKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgYXJndW1lbnRfZ2VuZXJhdG9yID0gQXJndW1lbnRHZW5lcmF0b3IoKQogICAgICAgICAgICAgICAgb3BlcmF0aW9uX2lucHV0X3NoYXBlID0gb3BlcmF0aW9uX21vZGVsLmlucHV0X3NoYXBlCiAgICAgICAgICAgICAgICBpZiBvcGVyYXRpb25faW5wdXRfc2hhcGUgaXMgTm9uZToKICAgICAgICAgICAgICAgICAgICBza2VsZXRvbiA9IHt9CiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHNrZWxldG9uID0gYXJndW1lbnRfZ2VuZXJhdG9yLmdlbmVyYXRlX3NrZWxldG9uKAogICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25faW5wdXRfc2hhcGUpCgogICAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZSgKICAgICAgICAgICAgICAgICAgICBqc29uLmR1bXBzKHNrZWxldG9uLCBpbmRlbnQ9NCwgZGVmYXVsdD1qc29uX2VuY29kZXIpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKCdcbicpCiAgICAgICAgICAgICAgICByZXR1cm4gMAoKCmNsYXNzIFN0dWJiZWRDTElPcGVyYXRpb25DYWxsZXIoQ0xJT3BlcmF0aW9uQ2FsbGVyKToKICAgICIiIkEgc3R1YmJlZCBDTElPcGVyYXRpb25DYWxsZXIKCiAgICBJdCBnZW5lcmF0ZXMgYSBmYWtlIHJlc3BvbnNlIGFuZCB1c2VzIHRoZSByZXNwb25zZSBhbmQgcHJvdmlkZWQgcGFyYW1ldGVycwogICAgdG8gbWFrZSBhIHN0dWJiZWQgY2xpZW50IGNhbGwgZm9yIGFuIG9wZXJhdGlvbiBjb21tYW5kLgogICAgIiIiCiAgICBkZWYgX21ha2VfY2xpZW50X2NhbGwoc2VsZiwgY2xpZW50LCBvcGVyYXRpb25fbmFtZSwgcGFyYW1ldGVycywKICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRfZ2xvYmFscyk6CiAgICAgICAgbWV0aG9kX25hbWUgPSB4Zm9ybV9uYW1lKG9wZXJhdGlvbl9uYW1lKQogICAgICAgIG9wZXJhdGlvbl9tb2RlbCA9IGNsaWVudC5tZXRhLnNlcnZpY2VfbW9kZWwub3BlcmF0aW9uX21vZGVsKAogICAgICAgICAgICBvcGVyYXRpb25fbmFtZSkKICAgICAgICBmYWtlX3Jlc3BvbnNlID0ge30KICAgICAgICBpZiBvcGVyYXRpb25fbW9kZWwub3V0cHV0X3NoYXBlOgogICAgICAgICAgICBhcmd1bWVudF9nZW5lcmF0b3IgPSBBcmd1bWVudEdlbmVyYXRvcih1c2VfbWVtYmVyX25hbWVzPVRydWUpCiAgICAgICAgICAgIGZha2VfcmVzcG9uc2UgPSBhcmd1bWVudF9nZW5lcmF0b3IuZ2VuZXJhdGVfc2tlbGV0b24oCiAgICAgICAgICAgICAgICBvcGVyYXRpb25fbW9kZWwub3V0cHV0X3NoYXBlKQogICAgICAgIHdpdGggU3R1YmJlcihjbGllbnQpIGFzIHN0dWJiZXI6CiAgICAgICAgICAgIHN0dWJiZXIuYWRkX3Jlc3BvbnNlKG1ldGhvZF9uYW1lLCBmYWtlX3Jlc3BvbnNlKQogICAgICAgICAgICByZXR1cm4gZ2V0YXR0cihjbGllbnQsIG1ldGhvZF9uYW1lKSgqKnBhcmFtZXRlcnMpCg==
