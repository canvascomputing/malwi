statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/retry/backoff_strategy.py
  contents:
  - name: ExponentialBackoffStrategy.__init__
    score: 0.0
    code: |-
      def __init__(self, base_delay_in_milliseconds, max_delay_in_milliseconds):
              self.base_delay_in_milliseconds = base_delay_in_milliseconds
              self.max_delay_in_milliseconds = max_delay_in_milliseconds
    tokens: resume load_fast STRING_LEN_S_ENT_HIGH load_fast self store_attr STRING_LEN_S_ENT_HIGH load_fast STRING_LEN_S_ENT_HIGH load_fast self store_attr STRING_LEN_S_ENT_HIGH return_const None
    hash: f5aeb37e9ee4e6e07a3723811abaeaea470a12b6ff3e29a0ffdbcdb30577a000
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/retry/backoff_strategy.py
  : IyBDb3B5cmlnaHQgMjAxOSBBbGliYWJhIENsb3VkIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAojCiMgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQojIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiMgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiMgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAojIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgoKaW1wb3J0IHJhbmRvbQpmcm9tIGFsaXl1bnNka2NvcmUucmV0cnkucmV0cnlfY29uZGl0aW9uIGltcG9ydCBSZXRyeUNvbmRpdGlvbgoKCmNsYXNzIEJhY2tvZmZTdHJhdGVneShvYmplY3QpOgoKICAgIGRlZiBjb21wdXRlX2RlbGF5X2JlZm9yZV9uZXh0X3JldHJ5KHNlbGYsIHJldHJ5X3BvbGljeV9jb250ZXh0KToKICAgICAgICAiIiJDb21wdXRlIGRlbGF5IGZvciByZXF1ZXN0IG5lZWQgdG8gYmUgcmV0cmllZCwgaW4gbWlsbGlzZWNvbmRzIiIiCiAgICAgICAgcGFzcwoKCmNsYXNzIEZpeGVkRGVsYXlTdHJhdGVneShCYWNrb2ZmU3RyYXRlZ3kpOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBmaXhlZF9kZWxheSk6CiAgICAgICAgc2VsZi5maXhlZF9kZWxheSA9IGZpeGVkX2RlbGF5CgogICAgZGVmIGNvbXB1dGVfZGVsYXlfYmVmb3JlX25leHRfcmV0cnkoc2VsZiwgcmV0cnlfcG9saWN5X2NvbnRleHQpOgogICAgICAgIHJldHVybiBzZWxmLmZpeGVkX2RlbGF5CgoKY2xhc3MgTm9EZWxheVN0cmF0ZWd5KEZpeGVkRGVsYXlTdHJhdGVneSk6CgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIEZpeGVkRGVsYXlTdHJhdGVneS5fX2luaXRfXyhzZWxmLCAwKQoKCmNsYXNzIEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5KEJhY2tvZmZTdHJhdGVneSk6CgogICAgTUFYX1JFVFJZX0xJTUlUID0gMzAgICAjIHRvIGF2b2lkIGludGVnZXIgb3ZlcmZsb3cgZHVyaW5nIGRlbGF5IGNhbGN1bGF0aW9uCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGJhc2VfZGVsYXlfaW5fbWlsbGlzZWNvbmRzLCBtYXhfZGVsYXlfaW5fbWlsbGlzZWNvbmRzKToKICAgICAgICBzZWxmLmJhc2VfZGVsYXlfaW5fbWlsbGlzZWNvbmRzID0gYmFzZV9kZWxheV9pbl9taWxsaXNlY29uZHMKICAgICAgICBzZWxmLm1heF9kZWxheV9pbl9taWxsaXNlY29uZHMgPSBtYXhfZGVsYXlfaW5fbWlsbGlzZWNvbmRzCgogICAgZGVmIGNvbXB1dGVfZGVsYXlfYmVmb3JlX25leHRfcmV0cnkoc2VsZiwgcmV0cnlfcG9saWN5X2NvbnRleHQpOgogICAgICAgIHJldHJpZXMgPSBtaW4oc2VsZi5NQVhfUkVUUllfTElNSVQsIHJldHJ5X3BvbGljeV9jb250ZXh0LnJldHJpZXNfYXR0ZW1wdGVkKQogICAgICAgIGRlbGF5ID0gbWluKHNlbGYubWF4X2RlbGF5X2luX21pbGxpc2Vjb25kcywgc2VsZi5iYXNlX2RlbGF5X2luX21pbGxpc2Vjb25kcyA8PCByZXRyaWVzKQogICAgICAgIHJldHVybiBkZWxheQoKCmNsYXNzIEppdHRlcmVkRXhwb25lbnRpYWxCYWNrb2ZmU3RyYXRlZ3koRXhwb25lbnRpYWxCYWNrb2ZmU3RyYXRlZ3kpOgoKICAgIGRlZiBjb21wdXRlX2RlbGF5X2JlZm9yZV9uZXh0X3JldHJ5KHNlbGYsIHJldHJ5X3BvbGljeV9jb250ZXh0KToKICAgICAgICBkZWxheSA9IEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5LmNvbXB1dGVfZGVsYXlfYmVmb3JlX25leHRfcmV0cnkoc2VsZiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0cnlfcG9saWN5X2NvbnRleHQpCiAgICAgICAgcmV0dXJuIGRlbGF5IC8gMiArIHJhbmRvbS5yYW5kaW50KDAsIGludChkZWxheSAvIDIpKQoKCmNsYXNzIERlZmF1bHRNaXhlZEJhY2tvZmZTdHJhdGVneShCYWNrb2ZmU3RyYXRlZ3kpOgoKICAgICMgaW4gbWlsbGlzZWNvbmRzCiAgICBTREtfREVGQVVMVF9CQVNFX0RFTEFZID0gMTAwCiAgICBTREtfREVGQVVMVF9UUk9UVExFRF9CQVNFX0RFTEFZID0gNTAwCiAgICBTREtfREVGQVVMVF9NQVhfQkFDS09GRiA9IDIwICogMTAwMAoKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzZWxmLl9kZWZhdWx0X2JhY2tvZmZfc3RyYXRlZ3kgPSBFeHBvbmVudGlhbEJhY2tvZmZTdHJhdGVneSgKICAgICAgICAgICAgc2VsZi5TREtfREVGQVVMVF9CQVNFX0RFTEFZLAogICAgICAgICAgICBzZWxmLlNES19ERUZBVUxUX01BWF9CQUNLT0ZGCiAgICAgICAgKQogICAgICAgIHNlbGYuX2RlZmF1bHRfdGhyb3R0bGVkX2JhY2tvZmZfc3RyYXRlZ3kgPSBKaXR0ZXJlZEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5KAogICAgICAgICAgICBzZWxmLlNES19ERUZBVUxUX1RST1RUTEVEX0JBU0VfREVMQVksCiAgICAgICAgICAgIHNlbGYuU0RLX0RFRkFVTFRfTUFYX0JBQ0tPRkYKICAgICAgICApCgogICAgZGVmIGNvbXB1dGVfZGVsYXlfYmVmb3JlX25leHRfcmV0cnkoc2VsZiwgcmV0cnlfcG9saWN5X2NvbnRleHQpOgogICAgICAgIHJldHJ5YWJsZSA9IHJldHJ5X3BvbGljeV9jb250ZXh0LnJldHJ5YWJsZQogICAgICAgIGlmIHJldHJ5YWJsZSAmIFJldHJ5Q29uZGl0aW9uLlNIT1VMRF9SRVRSWV9XSVRIX1RIUk9UVExJTkdfQkFDS09GRjoKICAgICAgICAgICAgcmV0dXJuIHNlbGYuX2RlZmF1bHRfdGhyb3R0bGVkX2JhY2tvZmZfc3RyYXRlZ3kuY29tcHV0ZV9kZWxheV9iZWZvcmVfbmV4dF9yZXRyeSgKICAgICAgICAgICAgICAgIHJldHJ5X3BvbGljeV9jb250ZXh0KQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBzZWxmLl9kZWZhdWx0X2JhY2tvZmZfc3RyYXRlZ3kuY29tcHV0ZV9kZWxheV9iZWZvcmVfbmV4dF9yZXRyeSgKICAgICAgICAgICAgICAgIHJldHJ5X3BvbGljeV9jb250ZXh0KQo=
