statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/strcolorize/3.4.3/strcolorize-3.4.3-py3-none-any/strcolorize/colored.py
  contents:
  - name: fg
    score: 0.0
    code: |-
      def fg(color):
          '''alias for colored().foreground()'''
          return colored(color).foreground()
    tokens: resume load_global colored load_fast color call load_attr foreground call return_value
    hash: dee02a580eed0d7b1dcd861dd8201fc075f5c58260a0e97ce7ba4af125c9ec9d
sources:
  .repo_cache/malicious_repos/pypi_malregistry/strcolorize/3.4.3/strcolorize-3.4.3-py3-none-any/strcolorize/colored.py: 
