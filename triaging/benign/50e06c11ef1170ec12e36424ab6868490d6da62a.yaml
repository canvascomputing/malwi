statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-kms/2.16.1/python-aliyun-sdk-kms-2.16.1/python-aliyun-sdk-kms-2.16.1/aliyunsdkkms/request/v20160120/CreateKeyRequest.py
  contents:
  - name: CreateKeyRequest
    score: 0.0
    code: "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nfrom aliyunsdkcore.request import RpcRequest\nfrom aliyunsdkkms.endpoint import endpoint_data\n\nclass CreateKeyRequest(RpcRequest):\n\n\tdef __init__(self):\n\t\tRpcRequest.__init__(self, 'Kms', '2016-01-20', 'CreateKey','kms')\n\t\tself.set_protocol_type('https')\n\t\tself.set_method('POST')\n\n\t\tif hasattr(self, \"endpoint_map\"):\n\t\t\tsetattr(self, \"endpoint_map\", endpoint_data.getEndpointMap())\n\t\tif hasattr(self, \"endpoint_regional\"):\n\t\t\tsetattr(self, \"endpoint_regional\", endpoint_data.getEndpointRegional())\n\n\tdef get_Origin(self): # String\n\t\treturn self.get_query_params().get('Origin')\n\n\tdef set_Origin(self, Origin):  # String\n\t\tself.add_query_param('Origin', Origin)\n\tdef get_Description(self): # String\n\t\treturn self.get_query_params().get('Description')\n\n\tdef set_Description(self, Description):  # String\n\t\tself.add_query_param('Description', Description)\n\tdef get_KeySpec(self): # String\n\t\treturn self.get_query_params().get('KeySpec')\n\n\tdef set_KeySpec(self, KeySpec):  # String\n\t\tself.add_query_param('KeySpec', KeySpec)\n\tdef get_RotationInterval(self): # String\n\t\treturn self.get_query_params().get('RotationInterval')\n\n\tdef set_RotationInterval(self, RotationInterval):  # String\n\t\tself.add_query_param('RotationInterval', RotationInterval)\n\tdef get_EnableAutomaticRotation(self): # Boolean\n\t\treturn self.get_query_params().get('EnableAutomaticRotation')\n\n\tdef set_EnableAutomaticRotation(self, EnableAutomaticRotation):  # Boolean\n\t\tself.add_query_param('EnableAutomaticRotation', EnableAutomaticRotation)\n\tdef get_Tags(self): # String\n\t\treturn self.get_query_params().get('Tags')\n\n\tdef set_Tags(self, Tags):  # String\n\t\tself.add_query_param('Tags', Tags)\n\tdef get_ProtectionLevel(self): # String\n\t\treturn self.get_query_params().get('ProtectionLevel')\n\n\tdef set_ProtectionLevel(self, ProtectionLevel):  # String\n\t\tself.add_query_param('ProtectionLevel', ProtectionLevel)\n\tdef get_KeyUsage(self): # String\n\t\treturn self.get_query_params().get('KeyUsage')\n\n\tdef set_KeyUsage(self, KeyUsage):  # String\n\t\tself.add_query_param('KeyUsage', KeyUsage)\n\tdef get_DKMSInstanceId(self): # String\n\t\treturn self.get_query_params().get('DKMSInstanceId')\n\n\tdef set_DKMSInstanceId(self, DKMSInstanceId):  # String\n\t\tself.add_query_param('DKMSInstanceId', DKMSInstanceId)"
    tokens: resume load_name __name__ store_name __module__ load_const STRING_BASE64_LEN_S_ENT_HIGH store_name __qualname__ load_const OBJECT make_function store_name __init__ load_const OBJECT make_function store_name get_Origin load_const OBJECT make_function store_name set_Origin load_const OBJECT make_function store_name get_Description load_const OBJECT make_function store_name set_Description load_const OBJECT make_function store_name get_KeySpec load_const OBJECT make_function store_name set_KeySpec load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name get_Tags load_const OBJECT make_function store_name set_Tags load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name get_KeyUsage load_const OBJECT make_function store_name set_KeyUsage load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH return_const None
    hash: 9f83ebe7dc2a4344c6a1aa147a68301b0c169a9e6630132068a713d8574f11ca
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-kms/2.16.1/python-aliyun-sdk-kms-2.16.1/python-aliyun-sdk-kms-2.16.1/aliyunsdkkms/request/v20160120/CreateKeyRequest.py
  : IyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiMgb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KIyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiMgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQojICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKIyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojCiMgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAojIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiMgIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiMgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiMgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwojIHVuZGVyIHRoZSBMaWNlbnNlLgoKZnJvbSBhbGl5dW5zZGtjb3JlLnJlcXVlc3QgaW1wb3J0IFJwY1JlcXVlc3QKZnJvbSBhbGl5dW5zZGtrbXMuZW5kcG9pbnQgaW1wb3J0IGVuZHBvaW50X2RhdGEKCmNsYXNzIENyZWF0ZUtleVJlcXVlc3QoUnBjUmVxdWVzdCk6CgoJZGVmIF9faW5pdF9fKHNlbGYpOgoJCVJwY1JlcXVlc3QuX19pbml0X18oc2VsZiwgJ0ttcycsICcyMDE2LTAxLTIwJywgJ0NyZWF0ZUtleScsJ2ttcycpCgkJc2VsZi5zZXRfcHJvdG9jb2xfdHlwZSgnaHR0cHMnKQoJCXNlbGYuc2V0X21ldGhvZCgnUE9TVCcpCgoJCWlmIGhhc2F0dHIoc2VsZiwgImVuZHBvaW50X21hcCIpOgoJCQlzZXRhdHRyKHNlbGYsICJlbmRwb2ludF9tYXAiLCBlbmRwb2ludF9kYXRhLmdldEVuZHBvaW50TWFwKCkpCgkJaWYgaGFzYXR0cihzZWxmLCAiZW5kcG9pbnRfcmVnaW9uYWwiKToKCQkJc2V0YXR0cihzZWxmLCAiZW5kcG9pbnRfcmVnaW9uYWwiLCBlbmRwb2ludF9kYXRhLmdldEVuZHBvaW50UmVnaW9uYWwoKSkKCglkZWYgZ2V0X09yaWdpbihzZWxmKTogIyBTdHJpbmcKCQlyZXR1cm4gc2VsZi5nZXRfcXVlcnlfcGFyYW1zKCkuZ2V0KCdPcmlnaW4nKQoKCWRlZiBzZXRfT3JpZ2luKHNlbGYsIE9yaWdpbik6ICAjIFN0cmluZwoJCXNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdPcmlnaW4nLCBPcmlnaW4pCglkZWYgZ2V0X0Rlc2NyaXB0aW9uKHNlbGYpOiAjIFN0cmluZwoJCXJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoJ0Rlc2NyaXB0aW9uJykKCglkZWYgc2V0X0Rlc2NyaXB0aW9uKHNlbGYsIERlc2NyaXB0aW9uKTogICMgU3RyaW5nCgkJc2VsZi5hZGRfcXVlcnlfcGFyYW0oJ0Rlc2NyaXB0aW9uJywgRGVzY3JpcHRpb24pCglkZWYgZ2V0X0tleVNwZWMoc2VsZik6ICMgU3RyaW5nCgkJcmV0dXJuIHNlbGYuZ2V0X3F1ZXJ5X3BhcmFtcygpLmdldCgnS2V5U3BlYycpCgoJZGVmIHNldF9LZXlTcGVjKHNlbGYsIEtleVNwZWMpOiAgIyBTdHJpbmcKCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnS2V5U3BlYycsIEtleVNwZWMpCglkZWYgZ2V0X1JvdGF0aW9uSW50ZXJ2YWwoc2VsZik6ICMgU3RyaW5nCgkJcmV0dXJuIHNlbGYuZ2V0X3F1ZXJ5X3BhcmFtcygpLmdldCgnUm90YXRpb25JbnRlcnZhbCcpCgoJZGVmIHNldF9Sb3RhdGlvbkludGVydmFsKHNlbGYsIFJvdGF0aW9uSW50ZXJ2YWwpOiAgIyBTdHJpbmcKCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnUm90YXRpb25JbnRlcnZhbCcsIFJvdGF0aW9uSW50ZXJ2YWwpCglkZWYgZ2V0X0VuYWJsZUF1dG9tYXRpY1JvdGF0aW9uKHNlbGYpOiAjIEJvb2xlYW4KCQlyZXR1cm4gc2VsZi5nZXRfcXVlcnlfcGFyYW1zKCkuZ2V0KCdFbmFibGVBdXRvbWF0aWNSb3RhdGlvbicpCgoJZGVmIHNldF9FbmFibGVBdXRvbWF0aWNSb3RhdGlvbihzZWxmLCBFbmFibGVBdXRvbWF0aWNSb3RhdGlvbik6ICAjIEJvb2xlYW4KCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnRW5hYmxlQXV0b21hdGljUm90YXRpb24nLCBFbmFibGVBdXRvbWF0aWNSb3RhdGlvbikKCWRlZiBnZXRfVGFncyhzZWxmKTogIyBTdHJpbmcKCQlyZXR1cm4gc2VsZi5nZXRfcXVlcnlfcGFyYW1zKCkuZ2V0KCdUYWdzJykKCglkZWYgc2V0X1RhZ3Moc2VsZiwgVGFncyk6ICAjIFN0cmluZwoJCXNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdUYWdzJywgVGFncykKCWRlZiBnZXRfUHJvdGVjdGlvbkxldmVsKHNlbGYpOiAjIFN0cmluZwoJCXJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoJ1Byb3RlY3Rpb25MZXZlbCcpCgoJZGVmIHNldF9Qcm90ZWN0aW9uTGV2ZWwoc2VsZiwgUHJvdGVjdGlvbkxldmVsKTogICMgU3RyaW5nCgkJc2VsZi5hZGRfcXVlcnlfcGFyYW0oJ1Byb3RlY3Rpb25MZXZlbCcsIFByb3RlY3Rpb25MZXZlbCkKCWRlZiBnZXRfS2V5VXNhZ2Uoc2VsZik6ICMgU3RyaW5nCgkJcmV0dXJuIHNlbGYuZ2V0X3F1ZXJ5X3BhcmFtcygpLmdldCgnS2V5VXNhZ2UnKQoKCWRlZiBzZXRfS2V5VXNhZ2Uoc2VsZiwgS2V5VXNhZ2UpOiAgIyBTdHJpbmcKCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnS2V5VXNhZ2UnLCBLZXlVc2FnZSkKCWRlZiBnZXRfREtNU0luc3RhbmNlSWQoc2VsZik6ICMgU3RyaW5nCgkJcmV0dXJuIHNlbGYuZ2V0X3F1ZXJ5X3BhcmFtcygpLmdldCgnREtNU0luc3RhbmNlSWQnKQoKCWRlZiBzZXRfREtNU0luc3RhbmNlSWQoc2VsZiwgREtNU0luc3RhbmNlSWQpOiAgIyBTdHJpbmcKCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnREtNU0luc3RhbmNlSWQnLCBES01TSW5zdGFuY2VJZCkK
