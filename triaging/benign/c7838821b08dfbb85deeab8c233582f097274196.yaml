statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/auth/signers/rsa_key_pair_signer.py
  contents:
  - name: RsaKeyPairSigner._get_session_ak_and_sk
    score: 0.0
    code: |-
      def _get_session_ak_and_sk(self):
              request = GetSessionAkRequest()
              request.set_method("GET")
              request.set_duration_seconds(self._session_period)

              try:
                  response_str = self._sts_client.do_action_with_exception(request)
                  response = json.loads(response_str.decode('utf-8'))
                  session_ak = str(response.get(
                      "SessionAccessKey").get("SessionAccessKeyId"))
                  session_sk = str(response.get(
                      "SessionAccessKey").get("SessionAccessKeySecret"))

                  self._session_credential = session_ak, session_sk
                  self._last_update_time = int(time.time())
              except exceptions.ServerException as srv_ex:
                  if srv_ex.error_code == 'InvalidAccessKeyId.NotFound' or \
                     srv_ex.error_code == 'SignatureDoesNotMatch':
                      raise exceptions.ClientException(error_code.SDK_INVALID_CREDENTIAL,
                                                       error_msg.get_msg('SDK_INVALID_CREDENTIAL'))
                  else:
                      raise
    tokens: resume load_global STRING_LEN_S_ENT_HIGH call store_fast request load_fast request load_attr set_method load_const GET call pop_top load_fast request load_attr STRING_LEN_S_ENT_HIGH load_fast self load_attr _session_period call pop_top nop load_fast self load_attr _sts_client load_attr STRING_LEN_S_ENT_HIGH load_fast request call store_fast response_str load_global json load_attr loads load_fast response_str load_attr ENCODING_DECODING load_const utf-8 call call store_fast response load_global str load_fast response load_attr get load_const STRING_BASE64_LEN_S_ENT_HIGH call load_attr get load_const STRING_LEN_S_ENT_HIGH call call store_fast session_ak load_global str load_fast response load_attr get load_const STRING_BASE64_LEN_S_ENT_HIGH call load_attr get load_const STRING_LEN_S_ENT_HIGH call call store_fast session_sk load_fast session_ak load_fast session_sk build_tuple load_fast self store_attr STRING_LEN_S_ENT_HIGH load_global int load_global time load_attr time call call load_fast self store_attr STRING_LEN_S_ENT_HIGH return_const None push_exc_info load_global exceptions load_attr ServerException check_exc_match pop_jump_if_false TO_NUMBER store_fast srv_ex load_fast srv_ex load_attr error_code load_const STRING_LEN_S_ENT_HIGH compare_op == pop_jump_if_true TO_NUMBER load_fast srv_ex load_attr error_code load_const STRING_LEN_S_ENT_HIGH compare_op == pop_jump_if_false TO_NUMBER load_global exceptions load_attr ClientException load_global error_code load_attr STRING_LEN_S_ENT_HIGH load_global error_msg load_attr get_msg load_const STRING_LEN_S_ENT_HIGH call call raise_varargs raise_varargs load_const store_fast srv_ex delete_fast srv_ex reraise reraise copy pop_except reraise
    hash: 8e8040c8b934c90267301f514746e9fa6bbd35fe18ae50ef81ef3c744569c417
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-core/2.13.36/python-aliyun-sdk-core-2.13.36/python-aliyun-sdk-core-2.13.36/aliyunsdkcore/auth/signers/rsa_key_pair_signer.py
  : IyBjb2Rpbmc6dXRmLTgKaW1wb3J0IGpzb24KaW1wb3J0IHRpbWUKaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IHNvY2tldAoKZnJvbSBhbGl5dW5zZGtjb3JlLmF1dGguc2lnbmVycy5zaWduZXIgaW1wb3J0IFNpZ25lcgpmcm9tIGFsaXl1bnNka2NvcmUuYWNzX2V4Y2VwdGlvbiBpbXBvcnQgZXJyb3JfY29kZQpmcm9tIGFsaXl1bnNka2NvcmUuYWNzX2V4Y2VwdGlvbiBpbXBvcnQgZXJyb3JfbXNnCmZyb20gYWxpeXVuc2RrY29yZS5hY3NfZXhjZXB0aW9uIGltcG9ydCBleGNlcHRpb25zCmZyb20gYWxpeXVuc2RrY29yZS5yZXF1ZXN0IGltcG9ydCBScGNSZXF1ZXN0CmZyb20gYWxpeXVuc2RrY29yZS5hdXRoLmFsZ29yaXRobSBpbXBvcnQgc2hhX2htYWMyNTYKCmxvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmNsYXNzIFJzYUtleVBhaXJTaWduZXIoU2lnbmVyKToKICAgIF9NSU5fU0VTU0lPTl9QRVJJT0QgPSA5MDAKICAgIF9NQVhfU0VTU0lPTl9QRVJJT0QgPSAzNjAwCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGNyZWRlbnRpYWwsIHJlZ2lvbl9pZCwgZGVidWc9RmFsc2UpOgogICAgICAgIGlmIGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgPCBzZWxmLl9NSU5fU0VTU0lPTl9QRVJJT0Qgb3IgXAogICAgICAgICAgIGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgPiBzZWxmLl9NQVhfU0VTU0lPTl9QRVJJT0Q6CiAgICAgICAgICAgIHJhaXNlIGV4Y2VwdGlvbnMuQ2xpZW50RXhjZXB0aW9uKAogICAgICAgICAgICAgICAgZXJyb3JfY29kZS5TREtfSU5WQUxJRF9TRVNTSU9OX0VYUElSQVRJT04sCiAgICAgICAgICAgICAgICBlcnJvcl9tc2cuZ2V0X21zZygnU0RLX0lOVkFMSURfU0VTU0lPTl9FWFBJUkFUSU9OJykuZm9ybWF0KAogICAgICAgICAgICAgICAgICAgIHNlbGYuX01JTl9TRVNTSU9OX1BFUklPRCwKICAgICAgICAgICAgICAgICAgICBzZWxmLl9NQVhfU0VTU0lPTl9QRVJJT0QpKQogICAgICAgIGNyZWRlbnRpYWwucmVnaW9uX2lkID0gcmVnaW9uX2lkCiAgICAgICAgc2VsZi5fcHVibGljX2tleV9pZCA9IGNyZWRlbnRpYWwucHVibGljX2tleV9pZAogICAgICAgIHNlbGYuX3ByaXZhdGVfa2V5ID0gY3JlZGVudGlhbC5wcml2YXRlX2tleQogICAgICAgIHNlbGYuX3Nlc3Npb25fcGVyaW9kID0gY3JlZGVudGlhbC5zZXNzaW9uX3BlcmlvZAogICAgICAgIHNlbGYuX2xhc3RfdXBkYXRlX3RpbWUgPSAwCiAgICAgICAgIyBzZWxmLl9zY2hlZHVsZV9pbnRlcnZhbCA9IGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgaWYgZGVidWcgXAogICAgICAgICMgICAgIGVsc2UgbWF4KGNyZWRlbnRpYWwuc2Vzc2lvbl9wZXJpb2QgKiAwLjgsIDUpCiAgICAgICAgZnJvbSBhbGl5dW5zZGtjb3JlLmNsaWVudCBpbXBvcnQgQWNzQ2xpZW50CiAgICAgICAgc2VsZi5fc3RzX2NsaWVudCA9IEFjc0NsaWVudCgKICAgICAgICAgICAgc2VsZi5fcHVibGljX2tleV9pZCwgc2VsZi5fcHJpdmF0ZV9rZXksIGNyZWRlbnRpYWwucmVnaW9uX2lkKQogICAgICAgIHNlbGYuX3Nlc3Npb25fY3JlZGVudGlhbCA9IE5vbmUKCiAgICBkZWYgc2lnbihzZWxmLCByZWdpb25faWQsIHJlcXVlc3QpOgogICAgICAgIHNlbGYuX2NoZWNrX3Nlc3Npb25fY3JlZGVudGlhbCgpCiAgICAgICAgc2Vzc2lvbl9haywgc2Vzc2lvbl9zayA9IHNlbGYuX3Nlc3Npb25fY3JlZGVudGlhbAogICAgICAgIGhlYWRlciA9IHJlcXVlc3QuZ2V0X3NpZ25lZF9oZWFkZXIocmVnaW9uX2lkLCBzZXNzaW9uX2FrLCBzZXNzaW9uX3NrKQogICAgICAgIHVybCA9IHJlcXVlc3QuZ2V0X3VybChyZWdpb25faWQsIHNlc3Npb25fYWssIHNlc3Npb25fc2spCiAgICAgICAgcmV0dXJuIGhlYWRlciwgdXJsCgogICAgZGVmIF9jaGVja19zZXNzaW9uX2NyZWRlbnRpYWwoc2VsZik6CiAgICAgICAgaWYgc2VsZi5fc2Vzc2lvbl9jcmVkZW50aWFsIGlzIE5vbmU6CiAgICAgICAgICAgIHNlbGYuX2dldF9zZXNzaW9uX2FrX2FuZF9zaygpCiAgICAgICAgICAgIHJldHVybgoKICAgICAgICBub3cgPSBpbnQodGltZS50aW1lKCkpCiAgICAgICAgaWYgbm93IC0gc2VsZi5fbGFzdF91cGRhdGVfdGltZSA+IChzZWxmLl9zZXNzaW9uX3BlcmlvZCAqIDAuOCk6CiAgICAgICAgICAgIHNlbGYuX2dldF9zZXNzaW9uX2FrX2FuZF9zaygpCgogICAgZGVmIF9nZXRfc2Vzc2lvbl9ha19hbmRfc2soc2VsZik6CiAgICAgICAgcmVxdWVzdCA9IEdldFNlc3Npb25Ba1JlcXVlc3QoKQogICAgICAgIHJlcXVlc3Quc2V0X21ldGhvZCgiR0VUIikKICAgICAgICByZXF1ZXN0LnNldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYuX3Nlc3Npb25fcGVyaW9kKQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJlc3BvbnNlX3N0ciA9IHNlbGYuX3N0c19jbGllbnQuZG9fYWN0aW9uX3dpdGhfZXhjZXB0aW9uKHJlcXVlc3QpCiAgICAgICAgICAgIHJlc3BvbnNlID0ganNvbi5sb2FkcyhyZXNwb25zZV9zdHIuZGVjb2RlKCd1dGYtOCcpKQogICAgICAgICAgICBzZXNzaW9uX2FrID0gc3RyKHJlc3BvbnNlLmdldCgKICAgICAgICAgICAgICAgICJTZXNzaW9uQWNjZXNzS2V5IikuZ2V0KCJTZXNzaW9uQWNjZXNzS2V5SWQiKSkKICAgICAgICAgICAgc2Vzc2lvbl9zayA9IHN0cihyZXNwb25zZS5nZXQoCiAgICAgICAgICAgICAgICAiU2Vzc2lvbkFjY2Vzc0tleSIpLmdldCgiU2Vzc2lvbkFjY2Vzc0tleVNlY3JldCIpKQoKICAgICAgICAgICAgc2VsZi5fc2Vzc2lvbl9jcmVkZW50aWFsID0gc2Vzc2lvbl9haywgc2Vzc2lvbl9zawogICAgICAgICAgICBzZWxmLl9sYXN0X3VwZGF0ZV90aW1lID0gaW50KHRpbWUudGltZSgpKQogICAgICAgIGV4Y2VwdCBleGNlcHRpb25zLlNlcnZlckV4Y2VwdGlvbiBhcyBzcnZfZXg6CiAgICAgICAgICAgIGlmIHNydl9leC5lcnJvcl9jb2RlID09ICdJbnZhbGlkQWNjZXNzS2V5SWQuTm90Rm91bmQnIG9yIFwKICAgICAgICAgICAgICAgc3J2X2V4LmVycm9yX2NvZGUgPT0gJ1NpZ25hdHVyZURvZXNOb3RNYXRjaCc6CiAgICAgICAgICAgICAgICByYWlzZSBleGNlcHRpb25zLkNsaWVudEV4Y2VwdGlvbihlcnJvcl9jb2RlLlNES19JTlZBTElEX0NSRURFTlRJQUwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cuZ2V0X21zZygnU0RLX0lOVkFMSURfQ1JFREVOVElBTCcpKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmFpc2UKCgpjbGFzcyBHZXRTZXNzaW9uQWtSZXF1ZXN0KFJwY1JlcXVlc3QpOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIFJwY1JlcXVlc3QuX19pbml0X18oc2VsZiwgcHJvZHVjdD0nU3RzJywgdmVyc2lvbj0nMjAxNS0wNC0wMScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25fbmFtZT0nR2VuZXJhdGVTZXNzaW9uQWNjZXNzS2V5JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25lcj1zaGFfaG1hYzI1NikKICAgICAgICBzZWxmLnNldF9wcm90b2NvbF90eXBlKCdodHRwcycpCgogICAgZGVmIGdldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYpOgogICAgICAgIHJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoIkR1cmF0aW9uU2Vjb25kcyIpCgogICAgZGVmIHNldF9kdXJhdGlvbl9zZWNvbmRzKHNlbGYsIGR1cmF0aW9uX3NlY29uZHMpOgogICAgICAgIHNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdEdXJhdGlvblNlY29uZHMnLCBkdXJhdGlvbl9zZWNvbmRzKQoKICAgIGRlZiBnZXRfcHVibGljX2tleV9pZChzZWxmKToKICAgICAgICByZXR1cm4gc2VsZi5nZXRfcXVlcnlfcGFyYW1zKCkuZ2V0KCdQdWJsaWNLZXlJZCcpCgogICAgZGVmIHNldF9wdWJsaWNfa2V5X2lkKHNlbGYsIHB1YmxpY19rZXlfaWQpOgogICAgICAgIHNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdQdWJsaWNLZXlJZCcsIHB1YmxpY19rZXlfaWQpCg==
