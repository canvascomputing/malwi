statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/pycryptoenv/_mac/_security.py
  contents:
  - name: SecurityConst
    score: 0.0
    code: |-
      def _extract_policy_properties(value):
          properties_dict = Security.SecPolicyCopyProperties(value)
          return CFHelpers.cf_dictionary_to_dict(properties_dict)
    tokens: resume load_name __name__ store_name __module__ load_const SecurityConst store_name __qualname__ load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name kSSLProtocol2 load_const INTEGER store_name kSSLProtocol3 load_const INTEGER store_name kTLSProtocol1 load_const INTEGER store_name kTLSProtocol11 load_const INTEGER store_name kTLSProtocol12 load_const INTEGER store_name kSSLClientSide load_const INTEGER store_name kSSLStreamType load_const INTEGER store_name errSSLProtocol load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name errSSLCrypto load_const INTEGER store_name errSSLInternal load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const store_name STRING_LEN_S_ENT_HIGH load_const store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name kSecPaddingNone load_const INTEGER store_name STRING_BASE64_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name CSSM_ALGID_DH load_const INTEGER store_name CSSM_ALGID_RSA load_const INTEGER store_name CSSM_ALGID_DSA load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH load_const INTEGER store_name STRING_LEN_S_ENT_HIGH return_const None
    hash: 347db992a40a4ccb64898d6f508362516bbfeac31efb2b62d915b62ca1935e0c
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/pycryptoenv/1.0.7/pycryptoenv-1.0.7/pycryptoenv-1.0.7/pycryptoenv/_mac/_security.py
  : IyBjb2Rpbmc6IHV0Zi04CmZyb20gX19mdXR1cmVfXyBpbXBvcnQgdW5pY29kZV9saXRlcmFscywgZGl2aXNpb24sIGFic29sdXRlX2ltcG9ydCwgcHJpbnRfZnVuY3Rpb24KCmZyb20gLi4gaW1wb3J0IGZmaQpmcm9tIC4uX2ZmaSBpbXBvcnQgbnVsbApmcm9tIC4uZXJyb3JzIGltcG9ydCBUTFNEaXNjb25uZWN0RXJyb3IsIFRMU0dyYWNlZnVsRGlzY29ubmVjdEVycm9yCgppZiBmZmkoKSA9PSAnY2ZmaSc6CiAgICBmcm9tIC5fc2VjdXJpdHlfY2ZmaSBpbXBvcnQgU2VjdXJpdHksIHZlcnNpb25faW5mbyBhcyBvc3hfdmVyc2lvbl9pbmZvCiAgICBmcm9tIC5fY29yZV9mb3VuZGF0aW9uX2NmZmkgaW1wb3J0IENvcmVGb3VuZGF0aW9uLCBDRkhlbHBlcnMKZWxzZToKICAgIGZyb20gLl9zZWN1cml0eV9jdHlwZXMgaW1wb3J0IFNlY3VyaXR5LCB2ZXJzaW9uX2luZm8gYXMgb3N4X3ZlcnNpb25faW5mbwogICAgZnJvbSAuX2NvcmVfZm91bmRhdGlvbl9jdHlwZXMgaW1wb3J0IENvcmVGb3VuZGF0aW9uLCBDRkhlbHBlcnMKCgpfX2FsbF9fID0gWwogICAgJ2hhbmRsZV9zZWNfZXJyb3InLAogICAgJ29zeF92ZXJzaW9uX2luZm8nLAogICAgJ1NlY3VyaXR5JywKICAgICdTZWN1cml0eUNvbnN0JywKXQoKCmRlZiBoYW5kbGVfc2VjX2Vycm9yKGVycm9yLCBleGNlcHRpb25fY2xhc3M9Tm9uZSk6CiAgICAiIiIKICAgIENoZWNrcyBhIFNlY3VyaXR5IE9TU3RhdHVzIGVycm9yIGNvZGUgYW5kIHRocm93cyBhbiBleGNlcHRpb24gaWYgdGhlcmUgaXMgYW4KICAgIGVycm9yIHRvIHJlcG9ydAoKICAgIDpwYXJhbSBlcnJvcjoKICAgICAgICBBbiBPU1N0YXR1cwoKICAgIDpwYXJhbSBleGNlcHRpb25fY2xhc3M6CiAgICAgICAgVGhlIGV4Y2VwdGlvbiBjbGFzcyB0byB1c2UgZm9yIHRoZSBleGNlcHRpb24gaWYgYW4gZXJyb3Igb2NjdXJyZWQKCiAgICA6cmFpc2VzOgogICAgICAgIE9TRXJyb3IgLSB3aGVuIHRoZSBPU1N0YXR1cyBjb250YWlucyBhbiBlcnJvcgogICAgIiIiCgogICAgaWYgZXJyb3IgPT0gMDoKICAgICAgICByZXR1cm4KCiAgICBpZiBlcnJvciBpbiBzZXQoW1NlY3VyaXR5Q29uc3QuZXJyU1NMQ2xvc2VkTm9Ob3RpZnksIFNlY3VyaXR5Q29uc3QuZXJyU1NMQ2xvc2VkQWJvcnRdKToKICAgICAgICByYWlzZSBUTFNEaXNjb25uZWN0RXJyb3IoJ1RoZSByZW1vdGUgZW5kIGNsb3NlZCB0aGUgY29ubmVjdGlvbicpCiAgICBpZiBlcnJvciA9PSBTZWN1cml0eUNvbnN0LmVyclNTTENsb3NlZEdyYWNlZnVsOgogICAgICAgIHJhaXNlIFRMU0dyYWNlZnVsRGlzY29ubmVjdEVycm9yKCdUaGUgcmVtb3RlIGVuZCBjbG9zZWQgdGhlIGNvbm5lY3Rpb24nKQoKICAgIGNmX2Vycm9yX3N0cmluZyA9IFNlY3VyaXR5LlNlY0NvcHlFcnJvck1lc3NhZ2VTdHJpbmcoZXJyb3IsIG51bGwoKSkKICAgIG91dHB1dCA9IENGSGVscGVycy5jZl9zdHJpbmdfdG9fdW5pY29kZShjZl9lcnJvcl9zdHJpbmcpCiAgICBDb3JlRm91bmRhdGlvbi5DRlJlbGVhc2UoY2ZfZXJyb3Jfc3RyaW5nKQoKICAgIGlmIG91dHB1dCBpcyBOb25lIG9yIG91dHB1dCA9PSAnJzoKICAgICAgICBvdXRwdXQgPSAnT1NTdGF0dXMgJXMnICUgZXJyb3IKCiAgICBpZiBleGNlcHRpb25fY2xhc3MgaXMgTm9uZToKICAgICAgICBleGNlcHRpb25fY2xhc3MgPSBPU0Vycm9yCgogICAgcmFpc2UgZXhjZXB0aW9uX2NsYXNzKG91dHB1dCkKCgpkZWYgX2V4dHJhY3RfcG9saWN5X3Byb3BlcnRpZXModmFsdWUpOgogICAgcHJvcGVydGllc19kaWN0ID0gU2VjdXJpdHkuU2VjUG9saWN5Q29weVByb3BlcnRpZXModmFsdWUpCiAgICByZXR1cm4gQ0ZIZWxwZXJzLmNmX2RpY3Rpb25hcnlfdG9fZGljdChwcm9wZXJ0aWVzX2RpY3QpCgoKQ0ZIZWxwZXJzLnJlZ2lzdGVyX25hdGl2ZV9tYXBwaW5nKAogICAgU2VjdXJpdHkuU2VjUG9saWN5R2V0VHlwZUlEKCksCiAgICBfZXh0cmFjdF9wb2xpY3lfcHJvcGVydGllcwopCgoKY2xhc3MgU2VjdXJpdHlDb25zdCgpOgogICAga1NlY1RydXN0U2V0dGluZ3NEb21haW5Vc2VyID0gMAogICAga1NlY1RydXN0U2V0dGluZ3NEb21haW5BZG1pbiA9IDEKICAgIGtTZWNUcnVzdFNldHRpbmdzRG9tYWluU3lzdGVtID0gMgoKICAgIGtTZWNUcnVzdFJlc3VsdFByb2NlZWQgPSAxCiAgICBrU2VjVHJ1c3RSZXN1bHRVbnNwZWNpZmllZCA9IDQKICAgIGtTZWNUcnVzdE9wdGlvbkltcGxpY2l0QW5jaG9ycyA9IDB4MDAwMDAwNDAKCiAgICBrU2VjRm9ybWF0T3BlblNTTCA9IDEKCiAgICBrU2VjSXRlbVR5cGVQcml2YXRlS2V5ID0gMQogICAga1NlY0l0ZW1UeXBlUHVibGljS2V5ID0gMgoKICAgIGtTU0xTZXNzaW9uT3B0aW9uQnJlYWtPblNlcnZlckF1dGggPSAwCgogICAga1NTTFByb3RvY29sMiA9IDEKICAgIGtTU0xQcm90b2NvbDMgPSAyCiAgICBrVExTUHJvdG9jb2wxID0gNAogICAga1RMU1Byb3RvY29sMTEgPSA3CiAgICBrVExTUHJvdG9jb2wxMiA9IDgKCiAgICBrU1NMQ2xpZW50U2lkZSA9IDEKICAgIGtTU0xTdHJlYW1UeXBlID0gMAoKICAgIGVyclNTTFByb3RvY29sID0gLTk4MDAKICAgIGVyclNTTFdvdWxkQmxvY2sgPSAtOTgwMwogICAgZXJyU1NMQ2xvc2VkR3JhY2VmdWwgPSAtOTgwNQogICAgZXJyU1NMQ2xvc2VkTm9Ob3RpZnkgPSAtOTgxNgogICAgZXJyU1NMQ2xvc2VkQWJvcnQgPSAtOTgwNgoKICAgIGVyclNTTFhDZXJ0Q2hhaW5JbnZhbGlkID0gLTk4MDcKICAgIGVyclNTTENyeXB0byA9IC05ODA5CiAgICBlcnJTU0xJbnRlcm5hbCA9IC05ODEwCiAgICBlcnJTU0xDZXJ0RXhwaXJlZCA9IC05ODE0CiAgICBlcnJTU0xDZXJ0Tm90WWV0VmFsaWQgPSAtOTgxNQogICAgZXJyU1NMVW5rbm93blJvb3RDZXJ0ID0gLTk4MTIKICAgIGVyclNTTE5vUm9vdENlcnQgPSAtOTgxMwogICAgZXJyU1NMSG9zdE5hbWVNaXNtYXRjaCA9IC05ODQzCiAgICBlcnJTU0xQZWVySGFuZHNoYWtlRmFpbCA9IC05ODI0CiAgICBlcnJTU0xQZWVyUHJvdG9jb2xWZXJzaW9uID0gLTk4MzYKICAgIGVyclNTTFBlZXJVc2VyQ2FuY2VsbGVkID0gLTk4MzkKICAgIGVyclNTTFdlYWtQZWVyRXBoZW1lcmFsREhLZXkgPSAtOTg1MAogICAgZXJyU1NMU2VydmVyQXV0aENvbXBsZXRlZCA9IC05ODQxCiAgICBlcnJTU0xSZWNvcmRPdmVyZmxvdyA9IC05ODQ3CgogICAgQ1NTTUVSUl9BUFBMRVRQX0hPU1ROQU1FX01JU01BVENIID0gLTIxNDc0MDg4OTYKICAgIENTU01FUlJfVFBfQ0VSVF9FWFBJUkVEID0gLTIxNDc0MDk2NTQKICAgIENTU01FUlJfVFBfQ0VSVF9OT1RfVkFMSURfWUVUID0gLTIxNDc0MDk2NTMKICAgIENTU01FUlJfVFBfQ0VSVF9SRVZPS0VEID0gLTIxNDc0MDk2NTIKICAgIENTU01FUlJfVFBfTk9UX1RSVVNURUQgPSAtMjE0NzQwOTYyMgogICAgQ1NTTUVSUl9UUF9DRVJUX1NVU1BFTkRFRCA9IC0yMTQ3NDA5NjUxCgogICAgQ1NTTV9DRVJUX1hfNTA5djMgPSAweDAwMDAwMDA0CgogICAgQVBQTEVfVFBfUkVWT0NBVElPTl9DUkwgPSBiJypceDg2SFx4ODZceGY3Y2RceDAxXHgwNicKICAgIEFQUExFX1RQX1JFVk9DQVRJT05fT0NTUCA9IGInKlx4ODZIXHg4Nlx4ZjdjZFx4MDFceDA3JwoKICAgIENTU01fQVBQTEVfVFBfT0NTUF9PUFRTX1ZFUlNJT04gPSAwCiAgICBDU1NNX1RQX0FDVElPTl9PQ1NQX0RJU0FCTEVfTkVUID0gMHgwMDAwMDAwNAogICAgQ1NTTV9UUF9BQ1RJT05fT0NTUF9DQUNIRV9SRUFEX0RJU0FCTEUgPSAweDAwMDAwMDA4CgogICAgQ1NTTV9BUFBMRV9UUF9DUkxfT1BUU19WRVJTSU9OID0gMAoKICAgIGVyclNlY1ZlcmlmeUZhaWxlZCA9IC02NzgwOAogICAgZXJyU2VjTm9UcnVzdFNldHRpbmdzID0gLTI1MjYzCiAgICBlcnJTZWNJdGVtTm90Rm91bmQgPSAtMjUzMDAKICAgIGVyclNlY0ludmFsaWRUcnVzdFNldHRpbmdzID0gLTI1MjYyCgogICAga1NlY1BhZGRpbmdOb25lID0gMAogICAga1NlY1BhZGRpbmdQS0NTMSA9IDEKCiAgICBDU1NNX0tFWVVTRV9TSUdOID0gMHgwMDAwMDAwNAogICAgQ1NTTV9LRVlVU0VfVkVSSUZZID0gMHgwMDAwMDAwOAoKICAgIENTU01fQUxHSURfREggPSAyCiAgICBDU1NNX0FMR0lEX1JTQSA9IDQyCiAgICBDU1NNX0FMR0lEX0RTQSA9IDQzCiAgICBDU1NNX0FMR0lEX0VDRFNBID0gNzMKICAgIENTU01fS0VZQVRUUl9QRVJNQU5FTlQgPSAweDAwMDAwMDAxCiAgICBDU1NNX0tFWUFUVFJfRVhUUkFDVEFCTEUgPSAweDAwMDAwMDIwCg==
