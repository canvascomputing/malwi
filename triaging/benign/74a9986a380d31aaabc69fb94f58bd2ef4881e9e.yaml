statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-kms/2.16.1/python-aliyun-sdk-kms-2.16.1/python-aliyun-sdk-kms-2.16.1/aliyunsdkkms/request/v20160120/ListTagResourcesRequest.py
  contents:
  - name: ListTagResourcesRequest
    score: 0.0
    code: "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nfrom aliyunsdkcore.request import RpcRequest\nfrom aliyunsdkkms.endpoint import endpoint_data\n\nclass ListTagResourcesRequest(RpcRequest):\n\n\tdef __init__(self):\n\t\tRpcRequest.__init__(self, 'Kms', '2016-01-20', 'ListTagResources','kms')\n\t\tself.set_protocol_type('https')\n\t\tself.set_method('POST')\n\n\t\tif hasattr(self, \"endpoint_map\"):\n\t\t\tsetattr(self, \"endpoint_map\", endpoint_data.getEndpointMap())\n\t\tif hasattr(self, \"endpoint_regional\"):\n\t\t\tsetattr(self, \"endpoint_regional\", endpoint_data.getEndpointRegional())\n\n\tdef get_ResourceIds(self): # RepeatList\n\t\treturn self.get_query_params().get('ResourceId')\n\n\tdef set_ResourceIds(self, ResourceId):  # RepeatList\n\t\tfor depth1 in range(len(ResourceId)):\n\t\t\tself.add_query_param('ResourceId.' + str(depth1 + 1), ResourceId[depth1])\n\tdef get_ResourceType(self): # String\n\t\treturn self.get_query_params().get('ResourceType')\n\n\tdef set_ResourceType(self, ResourceType):  # String\n\t\tself.add_query_param('ResourceType', ResourceType)\n\tdef get_NextToken(self): # String\n\t\treturn self.get_query_params().get('NextToken')\n\n\tdef set_NextToken(self, NextToken):  # String\n\t\tself.add_query_param('NextToken', NextToken)\n\tdef get_Tags(self): # RepeatList\n\t\treturn self.get_query_params().get('Tag')\n\n\tdef set_Tags(self, Tag):  # RepeatList\n\t\tfor depth1 in range(len(Tag)):\n\t\t\tif Tag[depth1].get('Value') is not None:\n\t\t\t\tself.add_query_param('Tag.' + str(depth1 + 1) + '.Value', Tag[depth1].get('Value'))\n\t\t\tif Tag[depth1].get('Key') is not None:\n\t\t\t\tself.add_query_param('Tag.' + str(depth1 + 1) + '.Key', Tag[depth1].get('Key'))"
    tokens: resume load_name __name__ store_name __module__ load_const STRING_LEN_S_ENT_HIGH store_name __qualname__ load_const OBJECT make_function store_name __init__ load_const OBJECT make_function store_name get_ResourceIds load_const OBJECT make_function store_name set_ResourceIds load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name STRING_LEN_S_ENT_HIGH load_const OBJECT make_function store_name get_NextToken load_const OBJECT make_function store_name set_NextToken load_const OBJECT make_function store_name get_Tags load_const OBJECT make_function store_name set_Tags return_const None
    hash: 4ccf93e85f7e6e4104f48a439d1a21d2c93ea63548b764bc219de30939d59314
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/python-aliyun-sdk-kms/2.16.1/python-aliyun-sdk-kms-2.16.1/python-aliyun-sdk-kms-2.16.1/aliyunsdkkms/request/v20160120/ListTagResourcesRequest.py
  : IyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiMgb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KIyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiMgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQojICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKIyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojCiMgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAojIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiMgIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiMgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiMgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwojIHVuZGVyIHRoZSBMaWNlbnNlLgoKZnJvbSBhbGl5dW5zZGtjb3JlLnJlcXVlc3QgaW1wb3J0IFJwY1JlcXVlc3QKZnJvbSBhbGl5dW5zZGtrbXMuZW5kcG9pbnQgaW1wb3J0IGVuZHBvaW50X2RhdGEKCmNsYXNzIExpc3RUYWdSZXNvdXJjZXNSZXF1ZXN0KFJwY1JlcXVlc3QpOgoKCWRlZiBfX2luaXRfXyhzZWxmKToKCQlScGNSZXF1ZXN0Ll9faW5pdF9fKHNlbGYsICdLbXMnLCAnMjAxNi0wMS0yMCcsICdMaXN0VGFnUmVzb3VyY2VzJywna21zJykKCQlzZWxmLnNldF9wcm90b2NvbF90eXBlKCdodHRwcycpCgkJc2VsZi5zZXRfbWV0aG9kKCdQT1NUJykKCgkJaWYgaGFzYXR0cihzZWxmLCAiZW5kcG9pbnRfbWFwIik6CgkJCXNldGF0dHIoc2VsZiwgImVuZHBvaW50X21hcCIsIGVuZHBvaW50X2RhdGEuZ2V0RW5kcG9pbnRNYXAoKSkKCQlpZiBoYXNhdHRyKHNlbGYsICJlbmRwb2ludF9yZWdpb25hbCIpOgoJCQlzZXRhdHRyKHNlbGYsICJlbmRwb2ludF9yZWdpb25hbCIsIGVuZHBvaW50X2RhdGEuZ2V0RW5kcG9pbnRSZWdpb25hbCgpKQoKCWRlZiBnZXRfUmVzb3VyY2VJZHMoc2VsZik6ICMgUmVwZWF0TGlzdAoJCXJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoJ1Jlc291cmNlSWQnKQoKCWRlZiBzZXRfUmVzb3VyY2VJZHMoc2VsZiwgUmVzb3VyY2VJZCk6ICAjIFJlcGVhdExpc3QKCQlmb3IgZGVwdGgxIGluIHJhbmdlKGxlbihSZXNvdXJjZUlkKSk6CgkJCXNlbGYuYWRkX3F1ZXJ5X3BhcmFtKCdSZXNvdXJjZUlkLicgKyBzdHIoZGVwdGgxICsgMSksIFJlc291cmNlSWRbZGVwdGgxXSkKCWRlZiBnZXRfUmVzb3VyY2VUeXBlKHNlbGYpOiAjIFN0cmluZwoJCXJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoJ1Jlc291cmNlVHlwZScpCgoJZGVmIHNldF9SZXNvdXJjZVR5cGUoc2VsZiwgUmVzb3VyY2VUeXBlKTogICMgU3RyaW5nCgkJc2VsZi5hZGRfcXVlcnlfcGFyYW0oJ1Jlc291cmNlVHlwZScsIFJlc291cmNlVHlwZSkKCWRlZiBnZXRfTmV4dFRva2VuKHNlbGYpOiAjIFN0cmluZwoJCXJldHVybiBzZWxmLmdldF9xdWVyeV9wYXJhbXMoKS5nZXQoJ05leHRUb2tlbicpCgoJZGVmIHNldF9OZXh0VG9rZW4oc2VsZiwgTmV4dFRva2VuKTogICMgU3RyaW5nCgkJc2VsZi5hZGRfcXVlcnlfcGFyYW0oJ05leHRUb2tlbicsIE5leHRUb2tlbikKCWRlZiBnZXRfVGFncyhzZWxmKTogIyBSZXBlYXRMaXN0CgkJcmV0dXJuIHNlbGYuZ2V0X3F1ZXJ5X3BhcmFtcygpLmdldCgnVGFnJykKCglkZWYgc2V0X1RhZ3Moc2VsZiwgVGFnKTogICMgUmVwZWF0TGlzdAoJCWZvciBkZXB0aDEgaW4gcmFuZ2UobGVuKFRhZykpOgoJCQlpZiBUYWdbZGVwdGgxXS5nZXQoJ1ZhbHVlJykgaXMgbm90IE5vbmU6CgkJCQlzZWxmLmFkZF9xdWVyeV9wYXJhbSgnVGFnLicgKyBzdHIoZGVwdGgxICsgMSkgKyAnLlZhbHVlJywgVGFnW2RlcHRoMV0uZ2V0KCdWYWx1ZScpKQoJCQlpZiBUYWdbZGVwdGgxXS5nZXQoJ0tleScpIGlzIG5vdCBOb25lOgoJCQkJc2VsZi5hZGRfcXVlcnlfcGFyYW0oJ1RhZy4nICsgc3RyKGRlcHRoMSArIDEpICsgJy5LZXknLCBUYWdbZGVwdGgxXS5nZXQoJ0tleScpKQo=
