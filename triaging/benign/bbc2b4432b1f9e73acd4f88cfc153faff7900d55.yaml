statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/colored-upgrade/0.0.1/colored-upgrade-0.0.1/colored-upgrade-0.0.1/colored/utilities.py
  contents:
  - name: Utilities.__init__
    score: 0.0
    code: |-
      def __init__(self):
              self._COLORS: dict = Library.COLORS
              self._HEX_COLORS: dict = Library.HEX_COLORS
              self._STYLES: dict = Library.STYLES
              self._CONTROLS: dict = Library.CONTROLS
              self._COLORTERM: dict = Library.COLORTERM
              self.RGB_MAXIMUM_COLOR: int = 255
              self.colorterm: str = 'truecolor'
              self.set_colorterm()
    tokens: resume load_global Library load_attr COLORS load_fast self store_attr _COLORS load_global Library load_attr HEX_COLORS load_fast self store_attr _HEX_COLORS load_global Library load_attr STYLES load_fast self store_attr _STYLES load_global Library load_attr CONTROLS load_fast self store_attr _CONTROLS load_global Library load_attr COLORTERM load_fast self store_attr _COLORTERM load_const INTEGER load_fast self store_attr STRING_LEN_S_ENT_HIGH load_const truecolor load_fast self store_attr colorterm load_fast self load_attr set_colorterm call pop_top return_const None
    hash: 08cb8144009324663a7c32e691dde0bcaca0e1a3eeb45d8f930d17f33fbc8374
sources:
  ? .repo_cache/malicious_repos/pypi_malregistry/colored-upgrade/0.0.1/colored-upgrade-0.0.1/colored-upgrade-0.0.1/colored/utilities.py
  : IyEvdXNyL2Jpbi9lbnYgcHl0aG9uCiMgLSotIGNvZGluZzogdXRmLTggLSotCgpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCmltcG9ydCBvcwoKZnJvbSAuZXhjZXB0aW9ucyBpbXBvcnQgSW52YWxpZFN0eWxlLCBJbnZhbGlkQ29sb3IsIEludmFsaWRIZXhDb2xvciwgSW52YWxpZENvbnRyb2wKZnJvbSAubGlicmFyeSBpbXBvcnQgTGlicmFyeQoKCmNsYXNzIFV0aWxpdGllczoKCiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc2VsZi5fQ09MT1JTOiBkaWN0ID0gTGlicmFyeS5DT0xPUlMKICAgICAgICBzZWxmLl9IRVhfQ09MT1JTOiBkaWN0ID0gTGlicmFyeS5IRVhfQ09MT1JTCiAgICAgICAgc2VsZi5fU1RZTEVTOiBkaWN0ID0gTGlicmFyeS5TVFlMRVMKICAgICAgICBzZWxmLl9DT05UUk9MUzogZGljdCA9IExpYnJhcnkuQ09OVFJPTFMKICAgICAgICBzZWxmLl9DT0xPUlRFUk06IGRpY3QgPSBMaWJyYXJ5LkNPTE9SVEVSTQogICAgICAgIHNlbGYuUkdCX01BWElNVU1fQ09MT1I6IGludCA9IDI1NQogICAgICAgIHNlbGYuY29sb3J0ZXJtOiBzdHIgPSAndHJ1ZWNvbG9yJwogICAgICAgIHNlbGYuc2V0X2NvbG9ydGVybSgpCgogICAgZGVmIGlzX2NvbG9yX2V4aXN0KHNlbGYsIG5hbWU6IHN0cikgLT4gYm9vbDoKICAgICAgICAiIiIgQ2hlY2tzIGZvciB2YWxpZCBjb2xvciBieSBuYW1lIG9yIGJ5IGhleCBzdHlsZSBuYW1lIG9yIG51bWJlciwKICAgICAgICAgICAgYW5kIHJhaXNlIGEgSW52YWxpZENvbG9yIG9yIEludmFsaWRIZXhDb2xvciBleGNlcHRpb24gaWYgaXQgZG9lc24ndCBleGlzdC4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgbmFtZTogU2V0cyB0aGUgbmFtZSBvZiB0aGUgc3R5bGUgb3IgdGhlIG51bWJlci4KCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgICBib29sOiBUcnVlIGlmIGV4aXN0LgogICAgICAgICIiIgogICAgICAgIGlmIG5hbWUuc3RhcnRzd2l0aCgnIycpOgogICAgICAgICAgICBpZiBuYW1lIG5vdCBpbiBzZWxmLl9IRVhfQ09MT1JTLnZhbHVlcygpOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZENvbG9yKGYne0ludmFsaWRIZXhDb2xvci5fX25hbWVfX306IHtuYW1lfScpCgogICAgICAgIGVsaWYgbmFtZSBub3QgaW4gc2VsZi5fQ09MT1JTLmtleXMoKSBhbmQgbmFtZSBub3QgaW4gc2VsZi5fQ09MT1JTLnZhbHVlcygpOgogICAgICAgICAgICByYWlzZSBJbnZhbGlkQ29sb3IoZid7SW52YWxpZENvbG9yLl9fbmFtZV9ffToge25hbWV9JykKCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgaXNfc3R5bGVfZXhpc3Qoc2VsZiwgbmFtZTogc3RyKSAtPiBib29sOgogICAgICAgICIiIiBDaGVja3MgZm9yIHZhbGlkIHN0eWxlIGFuZCByYWlzZSBhIEludmFsaWRTdHlsZSBleGNlcHRpb24KICAgICAgICAgICAgaWYgaXQgZG9lc24ndCBleGlzdC4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgbmFtZTogU2V0cyB0aGUgbmFtZSBvZiB0aGUgc3R5bGUgb3IgdGhlIG51bWJlci4KCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgICBib29sOiBUcnVlIGlmIGV4aXN0LgogICAgICAgICIiIgogICAgICAgIGlmIG5hbWUgbm90IGluIHNlbGYuX1NUWUxFUy5rZXlzKCkgYW5kIG5hbWUgbm90IGluIHNlbGYuX1NUWUxFUy52YWx1ZXMoKToKICAgICAgICAgICAgcmFpc2UgSW52YWxpZFN0eWxlKGYne0ludmFsaWRTdHlsZS5fX25hbWVfX306IHtuYW1lfScpCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGlzX2NvbnRyb2xfZXhpc3Qoc2VsZiwgbmFtZTogc3RyKSAtPiBib29sOgogICAgICAgICIiIiBDaGVja3MgZm9yIHZhbGlkIGNvbnRyb2wgYW5kIHJhaXNlIGEgSW52YWxpZENvbnRyb2wgZXhjZXB0aW9uCiAgICAgICAgICAgIGlmIGl0IGRvZXNuJ3QgZXhpc3QuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIG5hbWU6IFNldHMgdGhlIG5hbWUgb2YgdGhlIGNvbnRyb2wuCgogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgICAgYm9vbDogVHJ1ZSBpZiBleGlzdC4KICAgICAgICAiIiIKICAgICAgICBpZiBuYW1lLmxvd2VyKCkgbm90IGluIHNlbGYuX0NPTlRST0xTLmtleXMoKToKICAgICAgICAgICAgcmFpc2UgSW52YWxpZENvbnRyb2woZid7SW52YWxpZENvbnRyb2wuX19uYW1lX199OiB7bmFtZX0nKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBjb252ZXJ0X3BlcmNlbnRhZ2VzKHNlbGYsIHBlcmNlbnQ6IHN0ciB8IGludCkgLT4gaW50IHwgc3RyOgogICAgICAgICIiIiBDb252ZXJ0IHBlcmNlbnRhZ2VzIHRvIGNvbG9yIG51bWJlciB3aXRoIHJhbmdlIDAtMjU1OgoKICAgICAgICBBcmdzOgogICAgICAgICAgICBwZXJjZW50OiBTZXRzIHRoZSBwZXJjZW50IG51bWJlci4KCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgaW50IHwgc3RyOiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgdGhlIHJhbmdlIDAtMjU1LgogICAgICAgICIiIgogICAgICAgIHRyeTogICMgU2V0cyBtYXhpbXVtIHJhbmdlIGZvciBSR0IgY29sb3JzLgogICAgICAgICAgICBzZWxmLlJHQl9NQVhJTVVNX0NPTE9SID0gc2VsZi5fQ09MT1JURVJNW3NlbGYuY29sb3J0ZXJtXQogICAgICAgIGV4Y2VwdCBLZXlFcnJvcjoKICAgICAgICAgICAgcGFzcwoKICAgICAgICBwZXJjZW50YWdlcyA9IHt9CiAgICAgICAgZm9yIG51bWJlciBpbiByYW5nZShzZWxmLlJHQl9NQVhJTVVNX0NPTE9SICsgMSk6CiAgICAgICAgICAgIHBlcmNlbnRhZ2UgPSBpbnQoKG51bWJlciAvIHNlbGYuUkdCX01BWElNVU1fQ09MT1IpICogMTAwKQogICAgICAgICAgICBwZXJjZW50YWdlc1tmJ3twZXJjZW50YWdlfSUnXSA9IG51bWJlcgogICAgICAgIHRyeToKICAgICAgICAgICAgY29sb3IgPSBwZXJjZW50YWdlc1twZXJjZW50XQogICAgICAgIGV4Y2VwdCBLZXlFcnJvcjoKICAgICAgICAgICAgY29sb3IgPSBwZXJjZW50WzotMV0KCiAgICAgICAgcmV0dXJuIGNvbG9yCgogICAgZGVmIHNldF9jb2xvcnRlcm0oc2VsZiwgY29sb3J0ZXJtOiBzdHIgPSAnJyk6CiAgICAgICAgIiIiIFNldCB0aGUgJENPTE9SVEVSTSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpZiBpdCdzIG5lY2Vzc2FyeS4KICAgICAgICAkQ09MT1JURVJNIHVzZWQgdG8gaW5kaWNhdGUgd2hldGhlciBhIHRlcm1pbmFsIGVtdWxhdG9yCiAgICAgICAgY291bGQgdXNlIGNvbG9ycywgb3Igd2hldGhlciBpdCBzdXBwb3J0cyA4LWJpdCBjb2xvciBvciBtb3JlLgoKICAgICAgICBBcmdzOgogICAgICAgICAgICBjb2xvcnRlcm06IFNldHMgdGhlICRDT0xPUlRFUk0gZW52aXJvbm1lbnQgdmFyaWFibGUuCiAgICAgICAgIiIiCiAgICAgICAgaWYgbm90IGNvbG9ydGVybToKICAgICAgICAgICAgc2VsZi5jb2xvcnRlcm06IHN0ciA9IG9zLmdldGVudignQ09MT1JURVJNJykKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmNvbG9ydGVybTogc3RyID0gY29sb3J0ZXJtCiAgICAgICAgICAgIG9zLmVudmlyb25bJ0NPTE9SVEVSTSddID0gY29sb3J0ZXJtCgogICAgZGVmIGlzX3BlcmNlbnRhZ2Uoc2VsZiwgbnVtYmVyczogdHVwbGUpIC0+IGxpc3Q6CiAgICAgICAgIiIiIENoZWNrcyBhIHR1cGxlIG9mIFJHQiBudW1iZXJzIGFuZCBjb252ZXJ0IHRoZW0gdG8gaW50ZWdlcnMuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIG51bWJlcnM6IFNldHMgcGVyY2VudGFnZXMgb2YgbnVtYmVycy4KCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgbGlzdDogTGlzdCB3aXRoIFJHQiBudW1iZXJzLgogICAgICAgICIiIgogICAgICAgIHJnYl9saXN0ID0gW10KICAgICAgICBmb3IgbnVtIGluIG51bWJlcnM6CiAgICAgICAgICAgIGlmIHN0cihudW0pLmVuZHN3aXRoKCclJyk6CiAgICAgICAgICAgICAgICByZ2JfbGlzdC5hcHBlbmQoc2VsZi5jb252ZXJ0X3BlcmNlbnRhZ2VzKHN0cihudW0pKSkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHJnYl9saXN0LmFwcGVuZChudW0pCiAgICAgICAgcmV0dXJuIHJnYl9saXN0Cg==
