statistics:
  total_files: 1
  skipped_files: 0.0
  processed_objects: 1
  malicious_objects: 0
details:
- path: .repo_cache/malicious_repos/pypi_malregistry/reuquests/2.28.2/reuquests-2.28.2/reuquests-2.28.2/setup.py
  contents:
  - name: <module>
    score: 0.0
    code: |-
      #!/usr/bin/env python
      import os
      import sys
      from codecs import open

      from setuptools import setup
      from setuptools.command.test import test as TestCommand

      CURRENT_PYTHON = sys.version_info[:2]
      REQUIRED_PYTHON = (3, 7)

      if CURRENT_PYTHON < REQUIRED_PYTHON:
          sys.stderr.write(
              """
      ==========================
      Unsupported Python version
      ==========================
      This version of Requests requires at least Python {}.{}, but
      you're trying to install it on Python {}.{}. To resolve this,
      consider upgrading to a supported Python version.

      If you can't upgrade your Python version, you'll need to
      pin to an older version of Requests (<2.28).
      """.format(
                  *(REQUIRED_PYTHON + CURRENT_PYTHON)
              )
          )
          sys.exit(1)


      class PyTest(TestCommand):
          user_options = [("pytest-args=", "a", "Arguments to pass into py.test")]

          def initialize_options(self):
              TestCommand.initialize_options(self)
              try:
                  from multiprocessing import cpu_count

                  self.pytest_args = ["-n", str(cpu_count()), "--boxed"]
              except (ImportError, NotImplementedError):
                  self.pytest_args = ["-n", "1", "--boxed"]

          def finalize_options(self):
              TestCommand.finalize_options(self)
              self.test_args = []
              self.test_suite = True

          def run_tests(self):
              import pytest

              errno = pytest.main(self.pytest_args)
              sys.exit(errno)
    tokens: TARGETED_FILE resume load_const INTEGER load_const import_name os store_name os load_const INTEGER load_const import_name sys store_name sys load_const INTEGER load_const import_name codecs import_from FILESYSTEM_ACCESS store_name FILESYSTEM_ACCESS pop_top load_const INTEGER load_const import_name setuptools import_from setup store_name setup pop_top load_const INTEGER load_const import_name STRING_LEN_S_ENT_HIGH import_from test store_name TestCommand pop_top load_name sys load_attr version_info load_const load_const INTEGER binary_slice store_name CURRENT_PYTHON load_const store_name REQUIRED_PYTHON load_name CURRENT_PYTHON load_name REQUIRED_PYTHON compare_op < pop_jump_if_false TO_NUMBER load_name sys load_attr stderr load_attr write push_null load_const STRING_LEN_M_ENT_HIGH load_attr format load_name REQUIRED_PYTHON load_name CURRENT_PYTHON binary_op + call_function_ex call pop_top push_null load_name sys load_attr PROCESS_TERMINATION load_const INTEGER call pop_top push_null load_build_class load_const OBJECT make_function load_const PyTest load_name TestCommand call store_name PyTest load_name sys load_attr argv load_const INTEGER binary_subscr load_const publish compare_op == pop_jump_if_false TO_NUMBER push_null load_name os load_attr system load_const STRING_LEN_S_ENT_HIGH call pop_top push_null load_name os load_attr system load_const STRING_FILE_PATH call pop_top push_null load_name sys load_attr PROCESS_TERMINATION call pop_top build_list load_const list_extend store_name requires build_list load_const list_extend store_name STRING_LEN_S_ENT_HIGH build_map store_name about load_name os load_attr path load_attr abspath load_name os load_attr path load_attr dirname load_name __file__ call call store_name here push_null load_name FILESYSTEM_ACCESS load_name os load_attr path load_attr join load_name here load_const requests load_const __version__.py call load_const r load_const utf-8 call before_with store_name f push_null load_name DYNAMIC_CODE_EXECUTION load_name f load_attr read call load_name about call pop_top load_const load_const load_const call pop_top push_null load_name FILESYSTEM_ACCESS load_const README.md load_const r load_const utf-8 call before_with store_name f load_name f load_attr read call store_name readme load_const load_const load_const call pop_top push_null load_name setup load_const build_map load_const name load_const reuquests map_add load_const version load_name about load_const __version__ binary_subscr map_add load_const description load_const STRING_LEN_S_ENT_HIGH map_add load_const STRING_LEN_S_ENT_HIGH load_const STRING_LEN_S_ENT_HIGH map_add load_const STRING_LEN_S_ENT_HIGH load_const STRING_FILE_PATH map_add load_const author load_const Albert Xor map_add load_const author_email load_name about load_const STRING_LEN_S_ENT_HIGH binary_subscr map_add load_const url load_name about load_const __url__ binary_subscr map_add load_const packages load_const requests build_list map_add load_const package_data load_const load_const LICENSE load_const NOTICE build_list build_map map_add load_const package_dir load_const requests load_const requests build_map map_add load_const STRING_LEN_S_ENT_HIGH load_const INTEGER map_add load_const python_requires load_const >=3.7, <4 map_add load_const STRING_LEN_S_ENT_HIGH load_name requires map_add load_const license load_name about load_const __license__ binary_subscr map_add load_const zip_safe load_const INTEGER map_add load_const classifiers build_list load_const list_extend map_add load_const cmdclass load_const test load_name PyTest build_map map_add load_const tests_require load_name STRING_LEN_S_ENT_HIGH map_add load_const extras_require build_list load_const STRING_LEN_S_ENT_HIGH build_list load_const STRING_LEN_S_ENT_HIGH build_list load_const build_const_key_map map_add load_const project_urls load_const STRING_URL load_const STRING_URL load_const build_const_key_map map_add call_function_ex pop_top return_const None push_exc_info with_except_start pop_jump_if_true TO_NUMBER reraise pop_top pop_except pop_top pop_top jump_backward TO_NUMBER copy pop_except reraise push_exc_info with_except_start pop_jump_if_true TO_NUMBER reraise pop_top pop_except pop_top pop_top jump_backward TO_NUMBER copy pop_except reraise
    hash: df5d1f1b44db0ccad17e8f75430941db7bbdf8e673d7c79431771e205ec8584d
sources:
  .repo_cache/malicious_repos/pypi_malregistry/reuquests/2.28.2/reuquests-2.28.2/reuquests-2.28.2/setup.py: IyEvdXNyL2Jpbi9lbnYgcHl0aG9uCmltcG9ydCBvcwppbXBvcnQgc3lzCmZyb20gY29kZWNzIGltcG9ydCBvcGVuCgpmcm9tIHNldHVwdG9vbHMgaW1wb3J0IHNldHVwCmZyb20gc2V0dXB0b29scy5jb21tYW5kLnRlc3QgaW1wb3J0IHRlc3QgYXMgVGVzdENvbW1hbmQKCkNVUlJFTlRfUFlUSE9OID0gc3lzLnZlcnNpb25faW5mb1s6Ml0KUkVRVUlSRURfUFlUSE9OID0gKDMsIDcpCgppZiBDVVJSRU5UX1BZVEhPTiA8IFJFUVVJUkVEX1BZVEhPTjoKICAgIHN5cy5zdGRlcnIud3JpdGUoCiAgICAgICAgIiIiCj09PT09PT09PT09PT09PT09PT09PT09PT09ClVuc3VwcG9ydGVkIFB5dGhvbiB2ZXJzaW9uCj09PT09PT09PT09PT09PT09PT09PT09PT09ClRoaXMgdmVyc2lvbiBvZiBSZXF1ZXN0cyByZXF1aXJlcyBhdCBsZWFzdCBQeXRob24ge30ue30sIGJ1dAp5b3UncmUgdHJ5aW5nIHRvIGluc3RhbGwgaXQgb24gUHl0aG9uIHt9Lnt9LiBUbyByZXNvbHZlIHRoaXMsCmNvbnNpZGVyIHVwZ3JhZGluZyB0byBhIHN1cHBvcnRlZCBQeXRob24gdmVyc2lvbi4KCklmIHlvdSBjYW4ndCB1cGdyYWRlIHlvdXIgUHl0aG9uIHZlcnNpb24sIHlvdSdsbCBuZWVkIHRvCnBpbiB0byBhbiBvbGRlciB2ZXJzaW9uIG9mIFJlcXVlc3RzICg8Mi4yOCkuCiIiIi5mb3JtYXQoCiAgICAgICAgICAgICooUkVRVUlSRURfUFlUSE9OICsgQ1VSUkVOVF9QWVRIT04pCiAgICAgICAgKQogICAgKQogICAgc3lzLmV4aXQoMSkKCgpjbGFzcyBQeVRlc3QoVGVzdENvbW1hbmQpOgogICAgdXNlcl9vcHRpb25zID0gWygicHl0ZXN0LWFyZ3M9IiwgImEiLCAiQXJndW1lbnRzIHRvIHBhc3MgaW50byBweS50ZXN0IildCgogICAgZGVmIGluaXRpYWxpemVfb3B0aW9ucyhzZWxmKToKICAgICAgICBUZXN0Q29tbWFuZC5pbml0aWFsaXplX29wdGlvbnMoc2VsZikKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZyb20gbXVsdGlwcm9jZXNzaW5nIGltcG9ydCBjcHVfY291bnQKCiAgICAgICAgICAgIHNlbGYucHl0ZXN0X2FyZ3MgPSBbIi1uIiwgc3RyKGNwdV9jb3VudCgpKSwgIi0tYm94ZWQiXQogICAgICAgIGV4Y2VwdCAoSW1wb3J0RXJyb3IsIE5vdEltcGxlbWVudGVkRXJyb3IpOgogICAgICAgICAgICBzZWxmLnB5dGVzdF9hcmdzID0gWyItbiIsICIxIiwgIi0tYm94ZWQiXQoKICAgIGRlZiBmaW5hbGl6ZV9vcHRpb25zKHNlbGYpOgogICAgICAgIFRlc3RDb21tYW5kLmZpbmFsaXplX29wdGlvbnMoc2VsZikKICAgICAgICBzZWxmLnRlc3RfYXJncyA9IFtdCiAgICAgICAgc2VsZi50ZXN0X3N1aXRlID0gVHJ1ZQoKICAgIGRlZiBydW5fdGVzdHMoc2VsZik6CiAgICAgICAgaW1wb3J0IHB5dGVzdAoKICAgICAgICBlcnJubyA9IHB5dGVzdC5tYWluKHNlbGYucHl0ZXN0X2FyZ3MpCiAgICAgICAgc3lzLmV4aXQoZXJybm8pCgoKIyAnc2V0dXAucHkgcHVibGlzaCcgc2hvcnRjdXQuCmlmIHN5cy5hcmd2Wy0xXSA9PSAicHVibGlzaCI6CiAgICBvcy5zeXN0ZW0oInB5dGhvbiBzZXR1cC5weSBzZGlzdCBiZGlzdF93aGVlbCIpCiAgICBvcy5zeXN0ZW0oInR3aW5lIHVwbG9hZCBkaXN0LyoiKQogICAgc3lzLmV4aXQoKQoKcmVxdWlyZXMgPSBbCiAgICAiY2hhcnNldF9ub3JtYWxpemVyPj0yLDw0IiwKICAgICJpZG5hPj0yLjUsPDQiLAogICAgInVybGxpYjM+PTEuMjEuMSw8MS4yNyIsCiAgICAiY2VydGlmaT49MjAxNy40LjE3IiwKXQp0ZXN0X3JlcXVpcmVtZW50cyA9IFsKICAgICJweXRlc3QtaHR0cGJpbj09MC4wLjciLAogICAgInB5dGVzdC1jb3YiLAogICAgInB5dGVzdC1tb2NrIiwKICAgICJweXRlc3QteGRpc3QiLAogICAgIlB5U29ja3M+PTEuNS42LCAhPTEuNS43IiwKICAgICJweXRlc3Q+PTMiLApdCgphYm91dCA9IHt9CmhlcmUgPSBvcy5wYXRoLmFic3BhdGgob3MucGF0aC5kaXJuYW1lKF9fZmlsZV9fKSkKd2l0aCBvcGVuKG9zLnBhdGguam9pbihoZXJlLCAicmVxdWVzdHMiLCAiX192ZXJzaW9uX18ucHkiKSwgInIiLCAidXRmLTgiKSBhcyBmOgogICAgZXhlYyhmLnJlYWQoKSwgYWJvdXQpCgp3aXRoIG9wZW4oIlJFQURNRS5tZCIsICJyIiwgInV0Zi04IikgYXMgZjoKICAgIHJlYWRtZSA9IGYucmVhZCgpCgpzZXR1cCgKICAgIG5hbWU9InJldXF1ZXN0cyIsCiAgICB2ZXJzaW9uPWFib3V0WyJfX3ZlcnNpb25fXyJdLAogICAgZGVzY3JpcHRpb249IlB5dGhvbiBIWVBFUlRFWFRfVFJBTlNGRVJfUFJPVE9DT0wgZm9yIE1hbi4iLAogICAgbG9uZ19kZXNjcmlwdGlvbj0iUHl0aG9uIEhZUEVSVEVYVF9UUkFOU0ZFUl9QUk9UT0NPTCBmb3IgTWFuLiIsCiAgICBsb25nX2Rlc2NyaXB0aW9uX2NvbnRlbnRfdHlwZT0idGV4dC9tYXJrZG93biIsCiAgICBhdXRob3I9IkFsYmVydCBYb3IiLAogICAgYXV0aG9yX2VtYWlsPWFib3V0WyJfX2F1dGhvcl9lbWFpbF9fIl0sCiAgICB1cmw9YWJvdXRbIl9fdXJsX18iXSwKICAgIHBhY2thZ2VzPVsicmVxdWVzdHMiXSwKICAgIHBhY2thZ2VfZGF0YT17IiI6IFsiTElDRU5TRSIsICJOT1RJQ0UiXX0sCiAgICBwYWNrYWdlX2Rpcj17InJlcXVlc3RzIjogInJlcXVlc3RzIn0sCiAgICBpbmNsdWRlX3BhY2thZ2VfZGF0YT1UcnVlLAogICAgcHl0aG9uX3JlcXVpcmVzPSI+PTMuNywgPDQiLAogICAgaW5zdGFsbF9yZXF1aXJlcz1yZXF1aXJlcywKICAgIGxpY2Vuc2U9YWJvdXRbIl9fbGljZW5zZV9fIl0sCiAgICB6aXBfc2FmZT1GYWxzZSwKICAgIGNsYXNzaWZpZXJzPVsKICAgICAgICAiRGV2ZWxvcG1lbnQgU3RhdHVzIDo6IDUgLSBQcm9kdWN0aW9uL1N0YWJsZSIsCiAgICAgICAgIkVudmlyb25tZW50IDo6IFdlYiBFbnZpcm9ubWVudCIsCiAgICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLAogICAgICAgICJMaWNlbnNlIDo6IE9TSSBBcHByb3ZlZCA6OiBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSIsCiAgICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogRW5nbGlzaCIsCiAgICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLAogICAgICAgICJQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24iLAogICAgICAgICJQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMyIsCiAgICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLAogICAgICAgICJQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMy44IiwKICAgICAgICAiUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDMuOSIsCiAgICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiwKICAgICAgICAiUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IDMuMTEiLAogICAgICAgICJQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogMyA6OiBPbmx5IiwKICAgICAgICAiUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgOjogUHl0aG9uIDo6IEltcGxlbWVudGF0aW9uIDo6IENQeXRob24iLAogICAgICAgICJQcm9ncmFtbWluZyBMYW5ndWFnZSA6OiBQeXRob24gOjogSW1wbGVtZW50YXRpb24gOjogUHlQeSIsCiAgICAgICAgIlRvcGljIDo6IEludGVybmV0IDo6IFdXVy9IVFRQIiwKICAgICAgICAiVG9waWMgOjogU29mdHdhcmUgRGV2ZWxvcG1lbnQgOjogTGlicmFyaWVzIiwKICAgIF0sCiAgICBjbWRjbGFzcz17InRlc3QiOiBQeVRlc3R9LAogICAgdGVzdHNfcmVxdWlyZT10ZXN0X3JlcXVpcmVtZW50cywKICAgIGV4dHJhc19yZXF1aXJlPXsKICAgICAgICAic2VjdXJpdHkiOiBbXSwKICAgICAgICAic29ja3MiOiBbIlB5U29ja3M+PTEuNS42LCAhPTEuNS43Il0sCiAgICAgICAgInVzZV9jaGFyZGV0X29uX3B5MyI6IFsiY2hhcmRldD49My4wLjIsPDYiXSwKICAgIH0sCiAgICBwcm9qZWN0X3VybHM9ewogICAgICAgICJEb2N1bWVudGF0aW9uIjogImh0dHBzOi8vcmVxdWVzdHMucmVhZHRoZWRvY3MuaW8iLAogICAgICAgICJTb3VyY2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL3BzZi9yZXF1ZXN0cyIsCiAgICB9LAopCg==
